{"version":3,"file":"js/market.2515ddb9.js","mappings":"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,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,GAAG,UAAU,CAAC,GAAG,WAAW,CAAC,GAAG,YAAY,CAAC,GAAG,WAAW,CAAC,IAAI,UAAU,CAAC,EAAE,WAAW,CAAC,GAAG,WAAW,CAAC,EAAE,oBAAoB,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,sBAAsB,CAAC,EAAE,WAAW,CAAC,GAAG,eAAe,CAAC,IAAI,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,aAAa,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,QAAQ,CAAC,EAAE,QAAQ,CAAC,EAAE,QAAQ,CAAC,EAAE,aAAa,CAAC,EAAE,QAAQ,CAAC,EAAE,SAAS,CAAC,EAAE,WAAW,CAAC,EAAE,SAAS,CAAC,EAAE,aAAa,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,QAAQ,CAAC,EAAE,QAAQ,CAAC,EAAE,QAAQ,CAAC,EAAE,aAAa,CAAC,EAAE,QAAQ,CAAC,EAAE,SAAS,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,WAAW,CAAC,EAAE,cAAc,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,YAAY,CAAC,EAAE,aAAa,CAAC,GAAG,YAAY,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,iBAAiB,CAAC,GAAG,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,SAAS,CAAC,EAAE,YAAY,CAAC,EAAE,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,SAAS,CAAC,EAAE,YAAY,CAAC,EAAE,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAA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,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,eAAe,CAAC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","sources":["webpack://command-manager/./src/api/index.js","webpack://command-manager/./src/config/index.js","webpack://command-manager/./src/utils/index.js","webpack://command-manager/./node_modules/mdurl/lib/decode.mjs","webpack://command-manager/./node_modules/mdurl/lib/encode.mjs","webpack://command-manager/./node_modules/mdurl/lib/format.mjs","webpack://command-manager/./node_modules/mdurl/lib/parse.mjs","webpack://command-manager/./node_modules/uc.micro/categories/P/regex.mjs","webpack://command-manager/./node_modules/uc.micro/categories/S/regex.mjs","webpack://command-manager/./node_modules/uc.micro/properties/Any/regex.mjs","webpack://command-manager/./node_modules/uc.micro/categories/Cc/regex.mjs","webpack://command-manager/./node_modules/uc.micro/categories/Cf/regex.mjs","webpack://command-manager/./node_modules/uc.micro/categories/Z/regex.mjs","webpack://command-manager/https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-html.ts","webpack://command-manager/https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-xml.ts","webpack://command-manager/https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode_codepoint.ts","webpack://command-manager/https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode.ts","webpack://command-manager/https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/encode-html.ts","webpack://command-manager/https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/escape.ts","webpack://command-manager/https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/index.ts","webpack://command-manager/./node_modules/markdown-it/lib/common/utils.mjs","webpack://command-manager/./node_modules/markdown-it/lib/helpers/parse_link_label.mjs","webpack://command-manager/./node_modules/markdown-it/lib/helpers/parse_link_destination.mjs","webpack://command-manager/./node_modules/markdown-it/lib/helpers/parse_link_title.mjs","webpack://command-manager/./node_modules/markdown-it/lib/renderer.mjs","webpack://command-manager/./node_modules/markdown-it/lib/ruler.mjs","webpack://command-manager/./node_modules/markdown-it/lib/token.mjs","webpack://command-manager/./node_modules/markdown-it/lib/rules_core/state_core.mjs","webpack://command-manager/./node_modules/markdown-it/lib/rules_core/normalize.mjs","webpack://command-manager/./node_modules/markdown-it/lib/rules_core/block.mjs","webpack://command-manager/./node_modules/markdown-it/lib/rules_core/inline.mjs","webpack://command-manager/./node_modules/markdown-it/lib/rules_core/linkify.mjs","webpack://command-manager/./node_modules/markdown-it/lib/rules_core/replacements.mjs","webpack://command-manager/./node_modules/markdown-it/lib/rules_core/smartquotes.mjs","webpack://command-manager/./node_modules/markdown-it/lib/rules_core/text_join.mjs","webpack://command-manager/./node_modules/markdown-it/lib/parser_core.mjs","webpack://command-manager/./node_modules/markdown-it/lib/rules_block/state_block.mjs","webpack://command-manager/./node_modules/markdown-it/lib/rules_block/table.mjs","webpack://command-manager/./node_modules/markdown-it/lib/rules_block/code.mjs","webpack://command-manager/./node_modules/markdown-it/lib/rules_block/fence.mjs","webpack://command-manager/./node_modules/markdown-it/lib/rules_block/blockquote.mjs","webpack://command-manager/./node_modules/markdown-it/lib/rules_block/hr.mjs","webpack://command-manager/./node_modules/markdown-it/lib/rules_block/list.mjs","webpack://command-manager/./node_modules/markdown-it/lib/rules_block/reference.mjs","webpack://command-manager/./node_modules/markdown-it/lib/common/html_blocks.mjs","webpack://command-manager/./node_modules/markdown-it/lib/common/html_re.mjs","webpack://command-manager/./node_modules/markdown-it/lib/rules_block/html_block.mjs","webpack://command-manager/./node_modules/markdown-it/lib/rules_block/heading.mjs","webpack://command-manager/./node_modules/markdown-it/lib/rules_block/lheading.mjs","webpack://command-manager/./node_modules/markdown-it/lib/rules_block/paragraph.mjs","webpack://command-manager/./node_modules/markdown-it/lib/parser_block.mjs","webpack://command-manager/./node_modules/markdown-it/lib/rules_inline/state_inline.mjs","webpack://command-manager/./node_modules/markdown-it/lib/rules_inline/text.mjs","webpack://command-manager/./node_modules/markdown-it/lib/rules_inline/linkify.mjs","webpack://command-manager/./node_modules/markdown-it/lib/rules_inline/newline.mjs","webpack://command-manager/./node_modules/markdown-it/lib/rules_inline/escape.mjs","webpack://command-manager/./node_modules/markdown-it/lib/rules_inline/backticks.mjs","webpack://command-manager/./node_modules/markdown-it/lib/rules_inline/strikethrough.mjs","webpack://command-manager/./node_modules/markdown-it/lib/rules_inline/emphasis.mjs","webpack://command-manager/./node_modules/markdown-it/lib/rules_inline/link.mjs","webpack://command-manager/./node_modules/markdown-it/lib/rules_inline/image.mjs","webpack://command-manager/./node_modules/markdown-it/lib/rules_inline/autolink.mjs","webpack://command-manager/./node_modules/markdown-it/lib/rules_inline/html_inline.mjs","webpack://command-manager/./node_modules/markdown-it/lib/rules_inline/entity.mjs","webpack://command-manager/./node_modules/markdown-it/lib/rules_inline/balance_pairs.mjs","webpack://command-manager/./node_modules/markdown-it/lib/rules_inline/fragments_join.mjs","webpack://command-manager/./node_modules/markdown-it/lib/parser_inline.mjs","webpack://command-manager/./node_modules/linkify-it/lib/re.mjs","webpack://command-manager/./node_modules/linkify-it/index.mjs","webpack://command-manager/./node_modules/punycode.js/punycode.es6.js","webpack://command-manager/./node_modules/markdown-it/lib/presets/default.mjs","webpack://command-manager/./node_modules/markdown-it/lib/presets/zero.mjs","webpack://command-manager/./node_modules/markdown-it/lib/presets/commonmark.mjs","webpack://command-manager/./node_modules/markdown-it/lib/index.mjs","webpack://command-manager/./src/components/markdown-it/index.vue","webpack://command-manager/./src/components/markdown-it/index.vue?1e80","webpack://command-manager/./src/views/market/index.vue","webpack://command-manager/./src/views/market/index.vue?9926"],"sourcesContent":["import { fetchApi } from '@/utils'\r\nexport default {\r\n  market (data) {\r\n    return fetchApi('market', 'post', data)\r\n  },\r\n  export (data) {\r\n    return fetchApi('export', 'post', data)\r\n  },\r\n  open (data) {\r\n    return fetchApi('open', 'post', data)\r\n  },\r\n  exec (data) {\r\n    return fetchApi('exec', 'post', data)\r\n  },\r\n  stop (data) {\r\n    return fetchApi('stop', 'post', data)\r\n  }\r\n}\r\n","export default {\r\n  baseUrl: 'http://localhost:27001/'\r\n}\r\n","import config from '@/config'\r\n\r\nexport const fetchApi = (url, method = 'get', data = {}) => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${config.baseUrl}${url}`, {\r\n      method,\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.code === 200) {\r\n          resolve(res)\r\n        } else {\r\n          reject(res)\r\n        }\r\n      })\r\n      .catch(reject)\r\n  })\r\n}\r\n\r\nexport const downloadFile = (content) => {\r\n  const link = document.createElement('a')\r\n  link.href = URL.createObjectURL(new Blob([content]))\r\n  link.download = 'manifest.json'\r\n  link.click()\r\n}\r\n","/* eslint-disable no-bitwise */\n\nconst decodeCache = {}\n\nfunction getDecodeCache (exclude) {\n  let cache = decodeCache[exclude]\n  if (cache) { return cache }\n\n  cache = decodeCache[exclude] = []\n\n  for (let i = 0; i < 128; i++) {\n    const ch = String.fromCharCode(i)\n    cache.push(ch)\n  }\n\n  for (let i = 0; i < exclude.length; i++) {\n    const ch = exclude.charCodeAt(i)\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2)\n  }\n\n  return cache\n}\n\n// Decode percent-encoded string.\n//\nfunction decode (string, exclude) {\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars\n  }\n\n  const cache = getDecodeCache(exclude)\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function (seq) {\n    let result = ''\n\n    for (let i = 0, l = seq.length; i < l; i += 3) {\n      const b1 = parseInt(seq.slice(i + 1, i + 3), 16)\n\n      if (b1 < 0x80) {\n        result += cache[b1]\n        continue\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n\n        if ((b2 & 0xC0) === 0x80) {\n          const chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F)\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd'\n          } else {\n            result += String.fromCharCode(chr)\n          }\n\n          i += 3\n          continue\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n        const b3 = parseInt(seq.slice(i + 7, i + 9), 16)\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          const chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F)\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd'\n          } else {\n            result += String.fromCharCode(chr)\n          }\n\n          i += 6\n          continue\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n        const b3 = parseInt(seq.slice(i + 7, i + 9), 16)\n        const b4 = parseInt(seq.slice(i + 10, i + 12), 16)\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          let chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F)\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd'\n          } else {\n            chr -= 0x10000\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF))\n          }\n\n          i += 9\n          continue\n        }\n      }\n\n      result += '\\ufffd'\n    }\n\n    return result\n  })\n}\n\ndecode.defaultChars = ';/?:@&=+$,#'\ndecode.componentChars = ''\n\nexport default decode\n","const encodeCache = {}\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache (exclude) {\n  let cache = encodeCache[exclude]\n  if (cache) { return cache }\n\n  cache = encodeCache[exclude] = []\n\n  for (let i = 0; i < 128; i++) {\n    const ch = String.fromCharCode(i)\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch)\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2))\n    }\n  }\n\n  for (let i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i]\n  }\n\n  return cache\n}\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode (string, exclude, keepEscaped) {\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped = exclude\n    exclude = encode.defaultChars\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true\n  }\n\n  const cache = getEncodeCache(exclude)\n  let result = ''\n\n  for (let i = 0, l = string.length; i < l; i++) {\n    const code = string.charCodeAt(i)\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3)\n        i += 2\n        continue\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code]\n      continue\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        const nextCode = string.charCodeAt(i + 1)\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1])\n          i++\n          continue\n        }\n      }\n      result += '%EF%BF%BD'\n      continue\n    }\n\n    result += encodeURIComponent(string[i])\n  }\n\n  return result\n}\n\nencode.defaultChars = \";/?:@&=+$,-_.!~*'()#\"\nencode.componentChars = \"-_.!~*'()\"\n\nexport default encode\n","export default function format (url) {\n  let result = ''\n\n  result += url.protocol || ''\n  result += url.slashes ? '//' : ''\n  result += url.auth ? url.auth + '@' : ''\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']'\n  } else {\n    result += url.hostname || ''\n  }\n\n  result += url.port ? ':' + url.port : ''\n  result += url.pathname || ''\n  result += url.search || ''\n  result += url.hash || ''\n\n  return result\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\nfunction Url () {\n  this.protocol = null\n  this.slashes = null\n  this.auth = null\n  this.port = null\n  this.hostname = null\n  this.hash = null\n  this.search = null\n  this.pathname = null\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nconst protocolPattern = /^([a-z0-9.+-]+:)/i\nconst portPattern = /:[0-9]*$/\n\n// Special case for a simple path URL\n/* eslint-disable-next-line no-useless-escape */\nconst simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/\n\n// RFC 2396: characters reserved for delimiting URLs.\n// We actually just auto-escape these.\nconst delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t']\n\n// RFC 2396: characters not allowed for various reasons.\nconst unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims)\n\n// Allowed by RFCs, but cause of XSS attacks.  Always escape these.\nconst autoEscape = ['\\''].concat(unwise)\n// Characters that are never ever allowed in a hostname.\n// Note that any invalid chars are also handled, but these\n// are the ones that are *expected* to be seen, so we fast-path\n// them.\nconst nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape)\nconst hostEndingChars = ['/', '?', '#']\nconst hostnameMaxLen = 255\nconst hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/\nconst hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/\n// protocols that can allow \"unsafe\" and \"unwise\" chars.\n// protocols that never have a hostname.\nconst hostlessProtocol = {\n  javascript: true,\n  'javascript:': true\n}\n// protocols that always contain a // bit.\nconst slashedProtocol = {\n  http: true,\n  https: true,\n  ftp: true,\n  gopher: true,\n  file: true,\n  'http:': true,\n  'https:': true,\n  'ftp:': true,\n  'gopher:': true,\n  'file:': true\n}\n\nfunction urlParse (url, slashesDenoteHost) {\n  if (url && url instanceof Url) return url\n\n  const u = new Url()\n  u.parse(url, slashesDenoteHost)\n  return u\n}\n\nUrl.prototype.parse = function (url, slashesDenoteHost) {\n  let lowerProto, hec, slashes\n  let rest = url\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim()\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    const simplePath = simplePathPattern.exec(rest)\n    if (simplePath) {\n      this.pathname = simplePath[1]\n      if (simplePath[2]) {\n        this.search = simplePath[2]\n      }\n      return this\n    }\n  }\n\n  let proto = protocolPattern.exec(rest)\n  if (proto) {\n    proto = proto[0]\n    lowerProto = proto.toLowerCase()\n    this.protocol = proto\n    rest = rest.substr(proto.length)\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  /* eslint-disable-next-line no-useless-escape */\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//'\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2)\n      this.slashes = true\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    let hostEnd = -1\n    for (let i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i])\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    let auth, atSign\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@')\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd)\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign)\n      rest = rest.slice(atSign + 1)\n      this.auth = auth\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1\n    for (let i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i])\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd-- }\n    const host = rest.slice(0, hostEnd)\n    rest = rest.slice(hostEnd)\n\n    // pull out port.\n    this.parseHost(host)\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || ''\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    const ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']'\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      const hostparts = this.hostname.split(/\\./)\n      for (let i = 0, l = hostparts.length; i < l; i++) {\n        const part = hostparts[i]\n        if (!part) { continue }\n        if (!part.match(hostnamePartPattern)) {\n          let newpart = ''\n          for (let j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x'\n            } else {\n              newpart += part[j]\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            const validParts = hostparts.slice(0, i)\n            const notHost = hostparts.slice(i + 1)\n            const bit = part.match(hostnamePartStart)\n            if (bit) {\n              validParts.push(bit[1])\n              notHost.unshift(bit[2])\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest\n            }\n            this.hostname = validParts.join('.')\n            break\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = ''\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2)\n    }\n  }\n\n  // chop off from the tail first.\n  const hash = rest.indexOf('#')\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash)\n    rest = rest.slice(0, hash)\n  }\n  const qm = rest.indexOf('?')\n  if (qm !== -1) {\n    this.search = rest.substr(qm)\n    rest = rest.slice(0, qm)\n  }\n  if (rest) { this.pathname = rest }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = ''\n  }\n\n  return this\n}\n\nUrl.prototype.parseHost = function (host) {\n  let port = portPattern.exec(host)\n  if (port) {\n    port = port[0]\n    if (port !== ':') {\n      this.port = port.substr(1)\n    }\n    host = host.substr(0, host.length - port.length)\n  }\n  if (host) { this.hostname = host }\n}\n\nexport default urlParse\n","export default /[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDEAD\\uDF55-\\uDF59\\uDF86-\\uDF89]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDEB9\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDD44-\\uDD46\\uDDE2\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2\\uDF00-\\uDF09]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8\\uDF43-\\uDF4F\\uDFFF]|\\uD809[\\uDC70-\\uDC74]|\\uD80B[\\uDFF1\\uDFF2]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A\\uDFE2]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","export default /[\\$\\+<->\\^`\\|~\\xA2-\\xA6\\xA8\\xA9\\xAC\\xAE-\\xB1\\xB4\\xB8\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u03F6\\u0482\\u058D-\\u058F\\u0606-\\u0608\\u060B\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u07FE\\u07FF\\u0888\\u09F2\\u09F3\\u09FA\\u09FB\\u0AF1\\u0B70\\u0BF3-\\u0BFA\\u0C7F\\u0D4F\\u0D79\\u0E3F\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u166D\\u17DB\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u20A0-\\u20C0\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F\\u218A\\u218B\\u2190-\\u2307\\u230C-\\u2328\\u232B-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u2767\\u2794-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2CE5-\\u2CEA\\u2E50\\u2E51\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFF\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u309B\\u309C\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u31EF\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA828-\\uA82B\\uA836-\\uA839\\uAA77-\\uAA79\\uAB5B\\uAB6A\\uAB6B\\uFB29\\uFBB2-\\uFBC2\\uFD40-\\uFD4F\\uFDCF\\uFDFC-\\uFDFF\\uFE62\\uFE64-\\uFE66\\uFE69\\uFF04\\uFF0B\\uFF1C-\\uFF1E\\uFF3E\\uFF40\\uFF5C\\uFF5E\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFFC\\uFFFD]|\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDD8E\\uDD90-\\uDD9C\\uDDA0\\uDDD0-\\uDDFC]|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD805\\uDF3F|\\uD807[\\uDFD5-\\uDFF1]|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD82F\\uDC9C|\\uD833[\\uDF50-\\uDFC3]|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDEA\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD838[\\uDD4F\\uDEFF]|\\uD83B[\\uDCAC\\uDCB0\\uDD2E\\uDEF0\\uDEF1]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD0D-\\uDDAD\\uDDE6-\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDE60-\\uDE65\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDED7\\uDEDC-\\uDEEC\\uDEF0-\\uDEFC\\uDF00-\\uDF76\\uDF7B-\\uDFD9\\uDFE0-\\uDFEB\\uDFF0]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDCB0\\uDCB1\\uDD00-\\uDE53\\uDE60-\\uDE6D\\uDE70-\\uDE7C\\uDE80-\\uDE88\\uDE90-\\uDEBD\\uDEBF-\\uDEC5\\uDECE-\\uDEDB\\uDEE0-\\uDEE8\\uDEF0-\\uDEF8\\uDF00-\\uDF92\\uDF94-\\uDFCA]/","export default /[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","export default /[\\0-\\x1F\\x7F-\\x9F]/","export default /[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u0890\\u0891\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD80D[\\uDC30-\\uDC3F]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","export default /[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/",null,null,null,null,null,null,null,"// Utilities\n//\n\nimport * as mdurl from 'mdurl'\nimport * as ucmicro from 'uc.micro'\nimport { decodeHTML } from 'entities'\n\nfunction _class (obj) { return Object.prototype.toString.call(obj) }\n\nfunction isString (obj) { return _class(obj) === '[object String]' }\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty\n\nfunction has (object, key) {\n  return _hasOwnProperty.call(object, key)\n}\n\n// Merge objects\n//\nfunction assign (obj /* from1, from2, from3, ... */) {\n  const sources = Array.prototype.slice.call(arguments, 1)\n\n  sources.forEach(function (source) {\n    if (!source) { return }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object')\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key]\n    })\n  })\n\n  return obj\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt (src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1))\n}\n\nfunction isValidEntityCode (c) {\n  /* eslint no-bitwise:0 */\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false }\n  if (c === 0x0B) { return false }\n  if (c >= 0x0E && c <= 0x1F) { return false }\n  if (c >= 0x7F && c <= 0x9F) { return false }\n  // out of range\n  if (c > 0x10FFFF) { return false }\n  return true\n}\n\nfunction fromCodePoint (c) {\n  /* eslint no-bitwise:0 */\n  if (c > 0xffff) {\n    c -= 0x10000\n    const surrogate1 = 0xd800 + (c >> 10)\n    const surrogate2 = 0xdc00 + (c & 0x3ff)\n\n    return String.fromCharCode(surrogate1, surrogate2)\n  }\n  return String.fromCharCode(c)\n}\n\nconst UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@[\\\\\\]^_`{|}~])/g\nconst ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi\nconst UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi')\n\nconst DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i\n\nfunction replaceEntityPattern (match, name) {\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    const code = name[1].toLowerCase() === 'x'\n      ? parseInt(name.slice(2), 16)\n      : parseInt(name.slice(1), 10)\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code)\n    }\n\n    return match\n  }\n\n  const decoded = decodeHTML(match)\n  if (decoded !== match) {\n    return decoded\n  }\n\n  return match\n}\n\n/* function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n} */\n\nfunction unescapeMd (str) {\n  if (str.indexOf('\\\\') < 0) { return str }\n  return str.replace(UNESCAPE_MD_RE, '$1')\n}\n\nfunction unescapeAll (str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped }\n    return replaceEntityPattern(match, entity)\n  })\n}\n\nconst HTML_ESCAPE_TEST_RE = /[&<>\"]/\nconst HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g\nconst HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n}\n\nfunction replaceUnsafeChar (ch) {\n  return HTML_REPLACEMENTS[ch]\n}\n\nfunction escapeHtml (str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar)\n  }\n  return str\n}\n\nconst REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g\n\nfunction escapeRE (str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&')\n}\n\nfunction isSpace (code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true\n  }\n  return false\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace (code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true\n  }\n  return false\n}\n\n/* eslint-disable max-len */\n\n// Currently without astral characters support.\nfunction isPunctChar (ch) {\n  return ucmicro.P.test(ch) || ucmicro.S.test(ch)\n}\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct (ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true\n    default:\n      return false\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference (str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ')\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß')\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase()\n}\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nconst lib = { mdurl, ucmicro }\n\nexport {\n  lib,\n  assign,\n  isString,\n  has,\n  unescapeMd,\n  unescapeAll,\n  isValidEntityCode,\n  fromCodePoint,\n  escapeHtml,\n  arrayReplaceAt,\n  isSpace,\n  isWhiteSpace,\n  isMdAsciiPunct,\n  isPunctChar,\n  escapeRE,\n  normalizeReference\n}\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n\nexport default function parseLinkLabel (state, start, disableNested) {\n  let level, found, marker, prevPos\n\n  const max = state.posMax\n  const oldPos = state.pos\n\n  state.pos = start + 1\n  level = 1\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos)\n    if (marker === 0x5D /* ] */) {\n      level--\n      if (level === 0) {\n        found = true\n        break\n      }\n    }\n\n    prevPos = state.pos\n    state.md.inline.skipToken(state)\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++\n      } else if (disableNested) {\n        state.pos = oldPos\n        return -1\n      }\n    }\n  }\n\n  let labelEnd = -1\n\n  if (found) {\n    labelEnd = state.pos\n  }\n\n  // restore old state\n  state.pos = oldPos\n\n  return labelEnd\n}\n","// Parse link destination\n//\n\nimport { unescapeAll } from '../common/utils.mjs'\n\nexport default function parseLinkDestination (str, start, max) {\n  let code\n  let pos = start\n\n  const result = {\n    ok: false,\n    pos: 0,\n    str: ''\n  }\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++\n    while (pos < max) {\n      code = str.charCodeAt(pos)\n      if (code === 0x0A /* \\n */) { return result }\n      if (code === 0x3C /* < */) { return result }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1\n        result.str = unescapeAll(str.slice(start + 1, pos))\n        result.ok = true\n        return result\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2\n        continue\n      }\n\n      pos++\n    }\n\n    // no closing '>'\n    return result\n  }\n\n  // this should be ... } else { ... branch\n\n  let level = 0\n  while (pos < max) {\n    code = str.charCodeAt(pos)\n\n    if (code === 0x20) { break }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break }\n      pos += 2\n      continue\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++\n      if (level > 32) { return result }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break }\n      level--\n    }\n\n    pos++\n  }\n\n  if (start === pos) { return result }\n  if (level !== 0) { return result }\n\n  result.str = unescapeAll(str.slice(start, pos))\n  result.pos = pos\n  result.ok = true\n  return result\n}\n","// Parse link title\n//\n\nimport { unescapeAll } from '../common/utils.mjs'\n\n// Parse link title within `str` in [start, max] range,\n// or continue previous parsing if `prev_state` is defined (equal to result of last execution).\n//\nexport default function parseLinkTitle (str, start, max, prev_state) {\n  let code\n  let pos = start\n\n  const state = {\n    // if `true`, this is a valid link title\n    ok: false,\n    // if `true`, this link can be continued on the next line\n    can_continue: false,\n    // if `ok`, it's the position of the first character after the closing marker\n    pos: 0,\n    // if `ok`, it's the unescaped title\n    str: '',\n    // expected closing marker character code\n    marker: 0\n  }\n\n  if (prev_state) {\n    // this is a continuation of a previous parseLinkTitle call on the next line,\n    // used in reference links only\n    state.str = prev_state.str\n    state.marker = prev_state.marker\n  } else {\n    if (pos >= max) { return state }\n\n    let marker = str.charCodeAt(pos)\n    if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return state }\n\n    start++\n    pos++\n\n    // if opening marker is \"(\", switch it to closing marker \")\"\n    if (marker === 0x28) { marker = 0x29 }\n\n    state.marker = marker\n  }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos)\n    if (code === state.marker) {\n      state.pos = pos + 1\n      state.str += unescapeAll(str.slice(start, pos))\n      state.ok = true\n      return state\n    } else if (code === 0x28 /* ( */ && state.marker === 0x29 /* ) */) {\n      return state\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++\n    }\n\n    pos++\n  }\n\n  // no closing marker found, but this link title may continue on the next line (for references)\n  state.can_continue = true\n  state.str += unescapeAll(str.slice(start, pos))\n  return state\n}\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n\nimport { assign, unescapeAll, escapeHtml } from './common/utils.mjs'\n\nconst default_rules = {}\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(token.content) +\n          '</code>'\n}\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n'\n}\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n  const info = token.info ? unescapeAll(token.info).trim() : ''\n  let langName = ''\n  let langAttrs = ''\n\n  if (info) {\n    const arr = info.split(/(\\s+)/g)\n    langName = arr[0]\n    langAttrs = arr.slice(2).join('')\n  }\n\n  let highlighted\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content)\n  } else {\n    highlighted = escapeHtml(token.content)\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n'\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    const i = token.attrIndex('class')\n    const tmpAttrs = token.attrs ? token.attrs.slice() : []\n\n    if (i < 0) {\n      tmpAttrs.push(['class', options.langPrefix + langName])\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice()\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName\n    }\n\n    // Fake token just to render attributes\n    const tmpToken = {\n      attrs: tmpAttrs\n    }\n\n    return `<pre><code${slf.renderAttrs(tmpToken)}>${highlighted}</code></pre>\\n`\n  }\n\n  return `<pre><code${slf.renderAttrs(token)}>${highlighted}</code></pre>\\n`\n}\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env)\n\n  return slf.renderToken(tokens, idx, options)\n}\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n'\n}\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n'\n}\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content)\n}\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content\n}\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content\n}\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer () {\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.mjs)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules)\n}\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs (token) {\n  let i, l, result\n\n  if (!token.attrs) { return '' }\n\n  result = ''\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"'\n  }\n\n  return result\n}\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken (tokens, idx, options) {\n  const token = tokens[idx]\n  let result = ''\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return ''\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n'\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token)\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /'\n  }\n\n  // Check if we need to add a newline after this tag\n  let needLf = false\n  if (token.block) {\n    needLf = true\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        const nextToken = tokens[idx + 1]\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>'\n\n  return result\n}\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  let result = ''\n  const rules = this.rules\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    const type = tokens[i].type\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this)\n    } else {\n      result += this.renderToken(tokens, i, options)\n    }\n  }\n\n  return result\n}\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  let result = ''\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    switch (tokens[i].type) {\n      case 'text':\n        result += tokens[i].content\n        break\n      case 'image':\n        result += this.renderInlineAsText(tokens[i].children, options, env)\n        break\n      case 'html_inline':\n      case 'html_block':\n        result += tokens[i].content\n        break\n      case 'softbreak':\n      case 'hardbreak':\n        result += '\\n'\n        break\n      default:\n        // all other tokens are skipped\n    }\n  }\n\n  return result\n}\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  let result = ''\n  const rules = this.rules\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    const type = tokens[i].type\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env)\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this)\n    } else {\n      result += this.renderToken(tokens, i, options, env)\n    }\n  }\n\n  return result\n}\n\nexport default Renderer\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n\n/**\n * new Ruler()\n **/\nfunction Ruler () {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = []\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null\n}\n\n// Helper methods, should not be used directly\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (let i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i\n    }\n  }\n  return -1\n}\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  const self = this\n  const chains = ['']\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName)\n      }\n    })\n  })\n\n  self.__cache__ = {}\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = []\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return }\n\n      self.__cache__[chain].push(rule.fn)\n    })\n  })\n}\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  const index = this.__find__(name)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name) }\n\n  this.__rules__[index].fn = fn\n  this.__rules__[index].alt = opt.alt || []\n  this.__cache__ = null\n}\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  const index = this.__find__(beforeName)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName) }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  const index = this.__find__(afterName)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName) }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  const opt = options || {}\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  const result = []\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    const idx = this.__find__(name)\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return }\n      throw new Error('Rules manager: invalid rule name ' + name)\n    }\n    this.__rules__[idx].enabled = true\n    result.push(name)\n  }, this)\n\n  this.__cache__ = null\n  return result\n}\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false })\n\n  this.enable(list, ignoreInvalid)\n}\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  const result = []\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    const idx = this.__find__(name)\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return }\n      throw new Error('Rules manager: invalid rule name ' + name)\n    }\n    this.__rules__[idx].enabled = false\n    result.push(name)\n  }, this)\n\n  this.__cache__ = null\n  return result\n}\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__()\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || []\n}\n\nexport default Ruler\n","// Token class\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token (type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = ''\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = ''\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = ''\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false\n}\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex (name) {\n  if (!this.attrs) { return -1 }\n\n  const attrs = this.attrs\n\n  for (let i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i }\n  }\n  return -1\n}\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush (attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData)\n  } else {\n    this.attrs = [attrData]\n  }\n}\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet (name, value) {\n  const idx = this.attrIndex(name)\n  const attrData = [name, value]\n\n  if (idx < 0) {\n    this.attrPush(attrData)\n  } else {\n    this.attrs[idx] = attrData\n  }\n}\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet (name) {\n  const idx = this.attrIndex(name)\n  let value = null\n  if (idx >= 0) {\n    value = this.attrs[idx][1]\n  }\n  return value\n}\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin (name, value) {\n  const idx = this.attrIndex(name)\n\n  if (idx < 0) {\n    this.attrPush([name, value])\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value\n  }\n}\n\nexport default Token\n","// Core state object\n//\n\nimport Token from '../token.mjs'\n\nfunction StateCore (src, md, env) {\n  this.src = src\n  this.env = env\n  this.tokens = []\n  this.inlineMode = false\n  this.md = md // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token\n\nexport default StateCore\n","// Normalize input string\n\n// https://spec.commonmark.org/0.29/#line-ending\nconst NEWLINES_RE  = /\\r\\n?|\\n/g\nconst NULL_RE      = /\\0/g\n\nexport default function normalize (state) {\n  let str\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n')\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD')\n\n  state.src = str\n}\n","export default function block (state) {\n  let token\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0)\n    token.content  = state.src\n    token.map      = [0, 1]\n    token.children = []\n    state.tokens.push(token)\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens)\n  }\n}\n","export default function inline (state) {\n  const tokens = state.tokens\n\n  // Parse inlines\n  for (let i = 0, l = tokens.length; i < l; i++) {\n    const tok = tokens[i]\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children)\n    }\n  }\n}\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n\nimport { arrayReplaceAt } from '../common/utils.mjs'\n\nfunction isLinkOpen (str) {\n  return /^<a[>\\s]/i.test(str)\n}\nfunction isLinkClose (str) {\n  return /^<\\/a\\s*>/i.test(str)\n}\n\nexport default function linkify (state) {\n  const blockTokens = state.tokens\n\n  if (!state.md.options.linkify) { return }\n\n  for (let j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue\n    }\n\n    let tokens = blockTokens[j].children\n\n    let htmlLinkLevel = 0\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      const currentToken = tokens[i]\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--\n        }\n        continue\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++\n        }\n      }\n      if (htmlLinkLevel > 0) { continue }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n        const text = currentToken.content\n        let links = state.md.linkify.match(text)\n\n        // Now split string to nodes\n        const nodes = []\n        let level = currentToken.level\n        let lastPos = 0\n\n        // forbid escape sequence at the start of the string,\n        // this avoids http\\://example.com/ from being linkified as\n        // http:<a href=\"//example.com/\">//example.com/</a>\n        if (links.length > 0 &&\n            links[0].index === 0 &&\n            i > 0 &&\n            tokens[i - 1].type === 'text_special') {\n          links = links.slice(1)\n        }\n\n        for (let ln = 0; ln < links.length; ln++) {\n          const url = links[ln].url\n          const fullUrl = state.md.normalizeLink(url)\n          if (!state.md.validateLink(fullUrl)) { continue }\n\n          let urlText = links[ln].text\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '')\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '')\n          } else {\n            urlText = state.md.normalizeLinkText(urlText)\n          }\n\n          const pos = links[ln].index\n\n          if (pos > lastPos) {\n            const token   = new state.Token('text', '', 0)\n            token.content = text.slice(lastPos, pos)\n            token.level   = level\n            nodes.push(token)\n          }\n\n          const token_o   = new state.Token('link_open', 'a', 1)\n          token_o.attrs   = [['href', fullUrl]]\n          token_o.level   = level++\n          token_o.markup  = 'linkify'\n          token_o.info    = 'auto'\n          nodes.push(token_o)\n\n          const token_t   = new state.Token('text', '', 0)\n          token_t.content = urlText\n          token_t.level   = level\n          nodes.push(token_t)\n\n          const token_c   = new state.Token('link_close', 'a', -1)\n          token_c.level   = --level\n          token_c.markup  = 'linkify'\n          token_c.info    = 'auto'\n          nodes.push(token_c)\n\n          lastPos = links[ln].lastIndex\n        }\n        if (lastPos < text.length) {\n          const token   = new state.Token('text', '', 0)\n          token.content = text.slice(lastPos)\n          token.level   = level\n          nodes.push(token)\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes)\n      }\n    }\n  }\n}\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - multiplications 2 x 4 -> 2 × 4\n\nconst RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nconst SCOPED_ABBR_TEST_RE = /\\((c|tm|r)\\)/i\n\nconst SCOPED_ABBR_RE = /\\((c|tm|r)\\)/ig\nconst SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  tm: '™'\n}\n\nfunction replaceFn (match, name) {\n  return SCOPED_ABBR[name.toLowerCase()]\n}\n\nfunction replace_scoped (inlineTokens) {\n  let inside_autolink = 0\n\n  for (let i = inlineTokens.length - 1; i >= 0; i--) {\n    const token = inlineTokens[i]\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn)\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++\n    }\n  }\n}\n\nfunction replace_rare (inlineTokens) {\n  let inside_autolink = 0\n\n  for (let i = inlineTokens.length - 1; i >= 0; i--) {\n    const token = inlineTokens[i]\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013')\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++\n    }\n  }\n}\n\nexport default function replace (state) {\n  let blkIdx\n\n  if (!state.md.options.typographer) { return }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline') { continue }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children)\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children)\n    }\n  }\n}\n","// Convert straight quotation marks to typographic ones\n//\n\nimport { isWhiteSpace, isPunctChar, isMdAsciiPunct } from '../common/utils.mjs'\n\nconst QUOTE_TEST_RE = /['\"]/\nconst QUOTE_RE = /['\"]/g\nconst APOSTROPHE = '\\u2019' /* ’ */\n\nfunction replaceAt (str, index, ch) {\n  return str.slice(0, index) + ch + str.slice(index + 1)\n}\n\nfunction process_inlines (tokens, state) {\n  let j\n\n  const stack = []\n\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i]\n\n    const thisLevel = tokens[i].level\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break }\n    }\n    stack.length = j + 1\n\n    if (token.type !== 'text') { continue }\n\n    let text = token.content\n    let pos = 0\n    let max = text.length\n\n    /* eslint no-labels:0,block-scoped-var:0 */\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos\n      const t = QUOTE_RE.exec(text)\n      if (!t) { break }\n\n      let canOpen = true\n      let canClose = true\n      pos = t.index + 1\n      const isSingle = (t[0] === \"'\")\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      let lastChar = 0x20\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1)\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break // lastChar defaults to 0x20\n          if (!tokens[j].content) continue // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1)\n          break\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      let nextChar = 0x20\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos)\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break // nextChar defaults to 0x20\n          if (!tokens[j].content) continue // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0)\n          break\n        }\n      }\n\n      const isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar))\n      const isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar))\n\n      const isLastWhiteSpace = isWhiteSpace(lastChar)\n      const isNextWhiteSpace = isWhiteSpace(nextChar)\n\n      if (isNextWhiteSpace) {\n        canOpen = false\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar\n        canClose = isNextPunctChar\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE)\n        }\n        continue\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          let item = stack[j]\n          if (stack[j].level < thisLevel) { break }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j]\n\n            let openQuote\n            let closeQuote\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2]\n              closeQuote = state.md.options.quotes[3]\n            } else {\n              openQuote = state.md.options.quotes[0]\n              closeQuote = state.md.options.quotes[1]\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote)\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote)\n\n            pos += closeQuote.length - 1\n            if (item.token === i) { pos += openQuote.length - 1 }\n\n            text = token.content\n            max = text.length\n\n            stack.length = j\n            continue OUTER\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        })\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE)\n      }\n    }\n  }\n}\n\nexport default function smartquotes (state) {\n  /* eslint max-depth:0 */\n  if (!state.md.options.typographer) { return }\n\n  for (let blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state)\n  }\n}\n","// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n\nexport default function text_join (state) {\n  let curr, last\n  const blockTokens = state.tokens\n  const l = blockTokens.length\n\n  for (let j = 0; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue\n\n    const tokens = blockTokens[j].children\n    const max = tokens.length\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text'\n      }\n    }\n\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' &&\n          curr + 1 < max &&\n          tokens[curr + 1].type === 'text') {\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content\n      } else {\n        if (curr !== last) { tokens[last] = tokens[curr] }\n\n        last++\n      }\n    }\n\n    if (curr !== last) {\n      tokens.length = last\n    }\n  }\n}\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateCore from './rules_core/state_core.mjs'\n\nimport r_normalize from './rules_core/normalize.mjs'\nimport r_block from './rules_core/block.mjs'\nimport r_inline from './rules_core/inline.mjs'\nimport r_linkify from './rules_core/linkify.mjs'\nimport r_replacements from './rules_core/replacements.mjs'\nimport r_smartquotes from './rules_core/smartquotes.mjs'\nimport r_text_join from './rules_core/text_join.mjs'\n\nconst _rules = [\n  ['normalize',      r_normalize],\n  ['block',          r_block],\n  ['inline',         r_inline],\n  ['linkify',        r_linkify],\n  ['replacements',   r_replacements],\n  ['smartquotes',    r_smartquotes],\n  // `text_join` finds `text_special` tokens (for escape sequences)\n  // and joins them with the rest of the text\n  ['text_join',      r_text_join]\n]\n\n/**\n * new Core()\n **/\nfunction Core () {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1])\n  }\n}\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  const rules = this.ruler.getRules('')\n\n  for (let i = 0, l = rules.length; i < l; i++) {\n    rules[i](state)\n  }\n}\n\nCore.prototype.State = StateCore\n\nexport default Core\n","// Parser state class\n\nimport Token from '../token.mjs'\nimport { isSpace } from '../common/utils.mjs'\n\nfunction StateBlock (src, md, env, tokens) {\n  this.src = src\n\n  // link to parser instance\n  this.md     = md\n\n  this.env = env\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens\n\n  this.bMarks = []  // line begin offsets for fast jumps\n  this.eMarks = []  // line end offsets for fast jumps\n  this.tShift = []  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = []  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = []\n\n  // block parser variables\n\n  // required block content indent (for example, if we are\n  // inside a list, it would be positioned after list marker)\n  this.blkIndent  = 0\n  this.line       = 0 // line index in src\n  this.lineMax    = 0 // lines count\n  this.tight      = false  // loose/tight mode for lists\n  this.ddIndent   = -1 // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1 // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root'\n\n  this.level = 0\n\n  // Create caches\n  // Generate markers.\n  const s = this.src\n\n  for (let start = 0, pos = 0, indent = 0, offset = 0, len = s.length, indent_found = false; pos < len; pos++) {\n    const ch = s.charCodeAt(pos)\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4\n        } else {\n          offset++\n        }\n        continue\n      } else {\n        indent_found = true\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++ }\n      this.bMarks.push(start)\n      this.eMarks.push(pos)\n      this.tShift.push(indent)\n      this.sCount.push(offset)\n      this.bsCount.push(0)\n\n      indent_found = false\n      indent = 0\n      offset = 0\n      start = pos + 1\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length)\n  this.eMarks.push(s.length)\n  this.tShift.push(0)\n  this.sCount.push(0)\n  this.bsCount.push(0)\n\n  this.lineMax = this.bMarks.length - 1 // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  const token = new Token(type, tag, nesting)\n  token.block = true\n\n  if (nesting < 0) this.level-- // closing tag\n  token.level = this.level\n  if (nesting > 0) this.level++ // opening tag\n\n  this.tokens.push(token)\n  return token\n}\n\nStateBlock.prototype.isEmpty = function isEmpty (line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line]\n}\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines (from) {\n  for (let max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break\n    }\n  }\n  return from\n}\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces (pos) {\n  for (let max = this.src.length; pos < max; pos++) {\n    const ch = this.src.charCodeAt(pos)\n    if (!isSpace(ch)) { break }\n  }\n  return pos\n}\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack (pos, min) {\n  if (pos <= min) { return pos }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1 }\n  }\n  return pos\n}\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars (pos, code) {\n  for (let max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break }\n  }\n  return pos\n}\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack (pos, code, min) {\n  if (pos <= min) { return pos }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1 }\n  }\n  return pos\n}\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines (begin, end, indent, keepLastLF) {\n  if (begin >= end) {\n    return ''\n  }\n\n  const queue = new Array(end - begin)\n\n  for (let i = 0, line = begin; line < end; line++, i++) {\n    let lineIndent = 0\n    const lineStart = this.bMarks[line]\n    let first = lineStart\n    let last\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1\n    } else {\n      last = this.eMarks[line]\n    }\n\n    while (first < last && lineIndent < indent) {\n      const ch = this.src.charCodeAt(first)\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4\n        } else {\n          lineIndent++\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++\n      } else {\n        break\n      }\n\n      first++\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last)\n    } else {\n      queue[i] = this.src.slice(first, last)\n    }\n  }\n\n  return queue.join('')\n}\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token\n\nexport default StateBlock\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\nimport { isSpace } from '../common/utils.mjs'\n\n// Limit the amount of empty autocompleted cells in a table,\n// see https://github.com/markdown-it/markdown-it/issues/1000,\n//\n// Both pulldown-cmark and commonmark-hs limit the number of cells this way to ~200k.\n// We set it to 65k, which can expand user input by a factor of x370\n// (256x256 square is 1.8kB expanded into 650kB).\nconst MAX_AUTOCOMPLETED_CELLS = 0x10000\n\nfunction getLine (state, line) {\n  const pos = state.bMarks[line] + state.tShift[line]\n  const max = state.eMarks[line]\n\n  return state.src.slice(pos, max)\n}\n\nfunction escapedSplit (str) {\n  const result = []\n  const max = str.length\n\n  let pos = 0\n  let ch = str.charCodeAt(pos)\n  let isEscaped = false\n  let lastPos = 0\n  let current = ''\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos))\n        current = ''\n        lastPos = pos + 1\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1)\n        lastPos = pos\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */)\n    pos++\n\n    ch = str.charCodeAt(pos)\n  }\n\n  result.push(current + str.substring(lastPos))\n\n  return result\n}\n\nexport default function table (state, startLine, endLine, silent) {\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false }\n\n  let nextLine = startLine + 1\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  let pos = state.bMarks[nextLine] + state.tShift[nextLine]\n  if (pos >= state.eMarks[nextLine]) { return false }\n\n  const firstCh = state.src.charCodeAt(pos++)\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false }\n\n  if (pos >= state.eMarks[nextLine]) { return false }\n\n  const secondCh = state.src.charCodeAt(pos++)\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false }\n\n  while (pos < state.eMarks[nextLine]) {\n    const ch = state.src.charCodeAt(pos)\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false }\n\n    pos++\n  }\n\n  let lineText = getLine(state, startLine + 1)\n  let columns = lineText.split('|')\n  const aligns = []\n  for (let i = 0; i < columns.length; i++) {\n    const t = columns[i].trim()\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue\n      } else {\n        return false\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right')\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left')\n    } else {\n      aligns.push('')\n    }\n  }\n\n  lineText = getLine(state, startLine).trim()\n  if (lineText.indexOf('|') === -1) { return false }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n  columns = escapedSplit(lineText)\n  if (columns.length && columns[0] === '') columns.shift()\n  if (columns.length && columns[columns.length - 1] === '') columns.pop()\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  const columnCount = columns.length\n  if (columnCount === 0 || columnCount !== aligns.length) { return false }\n\n  if (silent) { return true }\n\n  const oldParentType = state.parentType\n  state.parentType = 'table'\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  const terminatorRules = state.md.block.ruler.getRules('blockquote')\n\n  const token_to = state.push('table_open', 'table', 1)\n  const tableLines = [startLine, 0]\n  token_to.map = tableLines\n\n  const token_tho = state.push('thead_open', 'thead', 1)\n  token_tho.map = [startLine, startLine + 1]\n\n  const token_htro = state.push('tr_open', 'tr', 1)\n  token_htro.map = [startLine, startLine + 1]\n\n  for (let i = 0; i < columns.length; i++) {\n    const token_ho = state.push('th_open', 'th', 1)\n    if (aligns[i]) {\n      token_ho.attrs  = [['style', 'text-align:' + aligns[i]]]\n    }\n\n    const token_il = state.push('inline', '', 0)\n    token_il.content  = columns[i].trim()\n    token_il.children = []\n\n    state.push('th_close', 'th', -1)\n  }\n\n  state.push('tr_close', 'tr', -1)\n  state.push('thead_close', 'thead', -1)\n\n  let tbodyLines\n  let autocompletedCells = 0\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break }\n\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n\n    if (terminate) { break }\n    lineText = getLine(state, nextLine).trim()\n    if (!lineText) { break }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break }\n    columns = escapedSplit(lineText)\n    if (columns.length && columns[0] === '') columns.shift()\n    if (columns.length && columns[columns.length - 1] === '') columns.pop()\n\n    // note: autocomplete count can be negative if user specifies more columns than header,\n    // but that does not affect intended use (which is limiting expansion)\n    autocompletedCells += columnCount - columns.length\n    if (autocompletedCells > MAX_AUTOCOMPLETED_CELLS) { break }\n\n    if (nextLine === startLine + 2) {\n      const token_tbo = state.push('tbody_open', 'tbody', 1)\n      token_tbo.map = tbodyLines = [startLine + 2, 0]\n    }\n\n    const token_tro = state.push('tr_open', 'tr', 1)\n    token_tro.map = [nextLine, nextLine + 1]\n\n    for (let i = 0; i < columnCount; i++) {\n      const token_tdo = state.push('td_open', 'td', 1)\n      if (aligns[i]) {\n        token_tdo.attrs  = [['style', 'text-align:' + aligns[i]]]\n      }\n\n      const token_il = state.push('inline', '', 0)\n      token_il.content  = columns[i] ? columns[i].trim() : ''\n      token_il.children = []\n\n      state.push('td_close', 'td', -1)\n    }\n    state.push('tr_close', 'tr', -1)\n  }\n\n  if (tbodyLines) {\n    state.push('tbody_close', 'tbody', -1)\n    tbodyLines[1] = nextLine\n  }\n\n  state.push('table_close', 'table', -1)\n  tableLines[1] = nextLine\n\n  state.parentType = oldParentType\n  state.line = nextLine\n  return true\n}\n","// Code block (4 spaces padded)\n\nexport default function code (state, startLine, endLine/*, silent */) {\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false }\n\n  let nextLine = startLine + 1\n  let last = nextLine\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++\n      continue\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++\n      last = nextLine\n      continue\n    }\n    break\n  }\n\n  state.line = last\n\n  const token   = state.push('code_block', 'code', 0)\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n'\n  token.map     = [startLine, state.line]\n\n  return true\n}\n","// fences (``` lang, ~~~ lang)\n\nexport default function fence (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (pos + 3 > max) { return false }\n\n  const marker = state.src.charCodeAt(pos)\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false\n  }\n\n  // scan marker length\n  let mem = pos\n  pos = state.skipChars(pos, marker)\n\n  let len = pos - mem\n\n  if (len < 3) { return false }\n\n  const markup = state.src.slice(mem, pos)\n  const params = state.src.slice(pos, max)\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true }\n\n  // search end of block\n  let nextLine = startLine\n  let haveEndMarker = false\n\n  for (;;) {\n    nextLine++\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine]\n    max = state.eMarks[nextLine]\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue\n    }\n\n    pos = state.skipChars(pos, marker)\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos)\n\n    if (pos < max) { continue }\n\n    haveEndMarker = true\n    // found!\n    break\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine]\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0)\n\n  const token   = state.push('fence', 'code', 0)\n  token.info    = params\n  token.content = state.getLines(startLine + 1, nextLine, len, true)\n  token.markup  = markup\n  token.map     = [startLine, state.line]\n\n  return true\n}\n","// Block quotes\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function blockquote (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  const oldLineMax = state.lineMax\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos) !== 0x3E/* > */) { return false }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true }\n\n  const oldBMarks  = []\n  const oldBSCount = []\n  const oldSCount  = []\n  const oldTShift  = []\n\n  const terminatorRules = state.md.block.ruler.getRules('blockquote')\n\n  const oldParentType = state.parentType\n  state.parentType = 'blockquote'\n  let lastLineEmpty = false\n  let nextLine\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    const isOutdented = state.sCount[nextLine] < state.blkIndent\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine]\n    max = state.eMarks[nextLine]\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      let initial = state.sCount[nextLine] + 1\n      let spaceAfterMarker\n      let adjustTab\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++\n        initial++\n        adjustTab = false\n        spaceAfterMarker = true\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true\n\n        if ((state.bsCount[nextLine] + initial) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++\n          initial++\n          adjustTab = false\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true\n        }\n      } else {\n        spaceAfterMarker = false\n      }\n\n      let offset = initial\n      oldBMarks.push(state.bMarks[nextLine])\n      state.bMarks[nextLine] = pos\n\n      while (pos < max) {\n        const ch = state.src.charCodeAt(pos)\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4\n          } else {\n            offset++\n          }\n        } else {\n          break\n        }\n\n        pos++\n      }\n\n      lastLineEmpty = pos >= max\n\n      oldBSCount.push(state.bsCount[nextLine])\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0)\n\n      oldSCount.push(state.sCount[nextLine])\n      state.sCount[nextLine] = offset - initial\n\n      oldTShift.push(state.tShift[nextLine])\n      state.tShift[nextLine] = pos - state.bMarks[nextLine]\n      continue\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break }\n\n    // Case 3: another tag found.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine])\n        oldBSCount.push(state.bsCount[nextLine])\n        oldTShift.push(state.tShift[nextLine])\n        oldSCount.push(state.sCount[nextLine])\n        state.sCount[nextLine] -= state.blkIndent\n      }\n\n      break\n    }\n\n    oldBMarks.push(state.bMarks[nextLine])\n    oldBSCount.push(state.bsCount[nextLine])\n    oldTShift.push(state.tShift[nextLine])\n    oldSCount.push(state.sCount[nextLine])\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1\n  }\n\n  const oldIndent = state.blkIndent\n  state.blkIndent = 0\n\n  const token_o  = state.push('blockquote_open', 'blockquote', 1)\n  token_o.markup = '>'\n  const lines = [startLine, 0]\n  token_o.map    = lines\n\n  state.md.block.tokenize(state, startLine, nextLine)\n\n  const token_c  = state.push('blockquote_close', 'blockquote', -1)\n  token_c.markup = '>'\n\n  state.lineMax = oldLineMax\n  state.parentType = oldParentType\n  lines[1] = state.line\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (let i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i]\n    state.tShift[i + startLine] = oldTShift[i]\n    state.sCount[i + startLine] = oldSCount[i]\n    state.bsCount[i + startLine] = oldBSCount[i]\n  }\n  state.blkIndent = oldIndent\n\n  return true\n}\n","// Horizontal rule\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function hr (state, startLine, endLine, silent) {\n  const max = state.eMarks[startLine]\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  const marker = state.src.charCodeAt(pos++)\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  let cnt = 1\n  while (pos < max) {\n    const ch = state.src.charCodeAt(pos++)\n    if (ch !== marker && !isSpace(ch)) { return false }\n    if (ch === marker) { cnt++ }\n  }\n\n  if (cnt < 3) { return false }\n\n  if (silent) { return true }\n\n  state.line = startLine + 1\n\n  const token  = state.push('hr', 'hr', 0)\n  token.map    = [startLine, state.line]\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker))\n\n  return true\n}\n","// Lists\n\nimport { isSpace } from '../common/utils.mjs'\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker (state, startLine) {\n  const max = state.eMarks[startLine]\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n\n  const marker = state.src.charCodeAt(pos++)\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1\n  }\n\n  if (pos < max) {\n    const ch = state.src.charCodeAt(pos)\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1\n    }\n  }\n\n  return pos\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker (state, startLine) {\n  const start = state.bMarks[startLine] + state.tShift[startLine]\n  const max = state.eMarks[startLine]\n  let pos = start\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1 }\n\n  let ch = state.src.charCodeAt(pos++)\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1 }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1 }\n\n    ch = state.src.charCodeAt(pos++)\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1 }\n\n      continue\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break\n    }\n\n    return -1\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos)\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1\n    }\n  }\n  return pos\n}\n\nfunction markTightParagraphs (state, idx) {\n  const level = state.level + 2\n\n  for (let i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true\n      state.tokens[i].hidden = true\n      i += 2\n    }\n  }\n}\n\nexport default function list (state, startLine, endLine, silent) {\n  let max, pos, start, token\n  let nextLine = startLine\n  let tight = true\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[nextLine] - state.listIndent >= 4 &&\n      state.sCount[nextLine] < state.blkIndent) {\n    return false\n  }\n\n  let isTerminatingParagraph = false\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      isTerminatingParagraph = true\n    }\n  }\n\n  // Detect list type and position after marker\n  let isOrdered\n  let markerValue\n  let posAfterMarker\n  if ((posAfterMarker = skipOrderedListMarker(state, nextLine)) >= 0) {\n    isOrdered = true\n    start = state.bMarks[nextLine] + state.tShift[nextLine]\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1))\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false\n  } else if ((posAfterMarker = skipBulletListMarker(state, nextLine)) >= 0) {\n    isOrdered = false\n  } else {\n    return false\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[nextLine]) return false\n  }\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true }\n\n  // We should terminate list on style change. Remember first one to compare.\n  const markerCharCode = state.src.charCodeAt(posAfterMarker - 1)\n\n  // Start list\n  const listTokIdx = state.tokens.length\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1)\n    if (markerValue !== 1) {\n      token.attrs = [['start', markerValue]]\n    }\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1)\n  }\n\n  const listLines = [nextLine, 0]\n  token.map    = listLines\n  token.markup = String.fromCharCode(markerCharCode)\n\n  //\n  // Iterate list items\n  //\n\n  let prevEmptyEnd = false\n  const terminatorRules = state.md.block.ruler.getRules('list')\n\n  const oldParentType = state.parentType\n  state.parentType = 'list'\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker\n    max = state.eMarks[nextLine]\n\n    const initial = state.sCount[nextLine] + posAfterMarker - (state.bMarks[nextLine] + state.tShift[nextLine])\n    let offset = initial\n\n    while (pos < max) {\n      const ch = state.src.charCodeAt(pos)\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4\n      } else if (ch === 0x20) {\n        offset++\n      } else {\n        break\n      }\n\n      pos++\n    }\n\n    const contentStart = pos\n    let indentAfterMarker\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1\n    } else {\n      indentAfterMarker = offset - initial\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1 }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    const indent = initial + indentAfterMarker\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1)\n    token.markup = String.fromCharCode(markerCharCode)\n    const itemLines = [nextLine, 0]\n    token.map    = itemLines\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1)\n    }\n\n    // change current state, then restore it after parser subcall\n    const oldTight = state.tight\n    const oldTShift = state.tShift[nextLine]\n    const oldSCount = state.sCount[nextLine]\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    const oldListIndent = state.listIndent\n    state.listIndent = state.blkIndent\n    state.blkIndent = indent\n\n    state.tight = true\n    state.tShift[nextLine] = contentStart - state.bMarks[nextLine]\n    state.sCount[nextLine] = offset\n\n    if (contentStart >= max && state.isEmpty(nextLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine)\n    } else {\n      state.md.block.tokenize(state, nextLine, endLine, true)\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - nextLine) > 1 && state.isEmpty(state.line - 1)\n\n    state.blkIndent = state.listIndent\n    state.listIndent = oldListIndent\n    state.tShift[nextLine] = oldTShift\n    state.sCount[nextLine] = oldSCount\n    state.tight = oldTight\n\n    token        = state.push('list_item_close', 'li', -1)\n    token.markup = String.fromCharCode(markerCharCode)\n\n    nextLine = state.line\n    itemLines[1] = nextLine\n\n    if (nextLine >= endLine) { break }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break }\n\n    // fail if terminating block found\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine)\n      if (posAfterMarker < 0) { break }\n      start = state.bMarks[nextLine] + state.tShift[nextLine]\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine)\n      if (posAfterMarker < 0) { break }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1)\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1)\n  }\n  token.markup = String.fromCharCode(markerCharCode)\n\n  listLines[1] = nextLine\n  state.line = nextLine\n\n  state.parentType = oldParentType\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx)\n  }\n\n  return true\n}\n","import { isSpace, normalizeReference } from '../common/utils.mjs'\n\nexport default function reference (state, startLine, _endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n  let nextLine = startLine + 1\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false }\n\n  function getNextLine (nextLine) {\n    const endLine = state.lineMax\n\n    if (nextLine >= endLine || state.isEmpty(nextLine)) {\n      // empty line or end of input\n      return null\n    }\n\n    let isContinuation = false\n\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { isContinuation = true }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { isContinuation = true }\n\n    if (!isContinuation) {\n      const terminatorRules = state.md.block.ruler.getRules('reference')\n      const oldParentType = state.parentType\n      state.parentType = 'reference'\n\n      // Some tags can terminate paragraph without empty line.\n      let terminate = false\n      for (let i = 0, l = terminatorRules.length; i < l; i++) {\n        if (terminatorRules[i](state, nextLine, endLine, true)) {\n          terminate = true\n          break\n        }\n      }\n\n      state.parentType = oldParentType\n      if (terminate) {\n        // terminated by another block\n        return null\n      }\n    }\n\n    const pos = state.bMarks[nextLine] + state.tShift[nextLine]\n    const max = state.eMarks[nextLine]\n\n    // max + 1 explicitly includes the newline\n    return state.src.slice(pos, max + 1)\n  }\n\n  let str = state.src.slice(pos, max + 1)\n\n  max = str.length\n  let labelEnd = -1\n\n  for (pos = 1; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x5B /* [ */) {\n      return false\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos\n      break\n    } else if (ch === 0x0A /* \\n */) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (ch === 0x5C /* \\ */) {\n      pos++\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        const lineContent = getNextLine(nextLine)\n        if (lineContent !== null) {\n          str += lineContent\n          max = str.length\n          nextLine++\n        }\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x0A) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (isSpace(ch)) {\n      /* eslint no-empty:0 */\n    } else {\n      break\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  const destRes = state.md.helpers.parseLinkDestination(str, pos, max)\n  if (!destRes.ok) { return false }\n\n  const href = state.md.normalizeLink(destRes.str)\n  if (!state.md.validateLink(href)) { return false }\n\n  pos = destRes.pos\n\n  // save cursor state, we could require to rollback later\n  const destEndPos = pos\n  const destEndLineNo = nextLine\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  const start = pos\n  for (; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x0A) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (isSpace(ch)) {\n      /* eslint no-empty:0 */\n    } else {\n      break\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  let titleRes = state.md.helpers.parseLinkTitle(str, pos, max)\n  while (titleRes.can_continue) {\n    const lineContent = getNextLine(nextLine)\n    if (lineContent === null) break\n    str += lineContent\n    pos = max\n    max = str.length\n    nextLine++\n    titleRes = state.md.helpers.parseLinkTitle(str, pos, max, titleRes)\n  }\n  let title\n\n  if (pos < max && start !== pos && titleRes.ok) {\n    title = titleRes.str\n    pos = titleRes.pos\n  } else {\n    title = ''\n    pos = destEndPos\n    nextLine = destEndLineNo\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    const ch = str.charCodeAt(pos)\n    if (!isSpace(ch)) { break }\n    pos++\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = ''\n      pos = destEndPos\n      nextLine = destEndLineNo\n      while (pos < max) {\n        const ch = str.charCodeAt(pos)\n        if (!isSpace(ch)) { break }\n        pos++\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false\n  }\n\n  const label = normalizeReference(str.slice(1, labelEnd))\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /* istanbul ignore if */\n  if (silent) { return true }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {}\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title, href }\n  }\n\n  state.line = nextLine\n  return true\n}\n","// List of valid html blocks names, according to commonmark spec\n// https://spec.commonmark.org/0.30/#html-blocks\n\nexport default [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n","// Regexps to match html elements\n\nconst attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*'\n\nconst unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+'\nconst single_quoted = \"'[^']*'\"\nconst double_quoted = '\"[^\"]*\"'\n\nconst attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')'\n\nconst attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)'\n\nconst open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>'\n\nconst close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>'\nconst comment     = '<!---?>|<!--(?:[^-]|-[^-]|--[^>])*-->'\nconst processing  = '<[?][\\\\s\\\\S]*?[?]>'\nconst declaration = '<![A-Za-z][^>]*>'\nconst cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>'\n\nconst HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')')\nconst HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')')\n\nexport { HTML_TAG_RE, HTML_OPEN_CLOSE_TAG_RE }\n","// HTML block\n\nimport block_names from '../common/html_blocks.mjs'\nimport { HTML_OPEN_CLOSE_TAG_RE } from '../common/html_re.mjs'\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nconst HTML_SEQUENCES = [\n  [/^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true],\n  [/^<!--/,        /-->/,   true],\n  [/^<\\?/,         /\\?>/,   true],\n  [/^<![A-Z]/,     />/,     true],\n  [/^<!\\[CDATA\\[/, /\\]\\]>/, true],\n  [new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true],\n  [new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false]\n]\n\nexport default function html_block (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (!state.md.options.html) { return false }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false }\n\n  let lineText = state.src.slice(pos, max)\n\n  let i = 0\n  for (; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break }\n  }\n  if (i === HTML_SEQUENCES.length) { return false }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2]\n  }\n\n  let nextLine = startLine + 1\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine]\n      max = state.eMarks[nextLine]\n      lineText = state.src.slice(pos, max)\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++ }\n        break\n      }\n    }\n  }\n\n  state.line = nextLine\n\n  const token   = state.push('html_block', '', 0)\n  token.map     = [startLine, nextLine]\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true)\n\n  return true\n}\n","// heading (#, ##, ...)\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function heading (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  let ch  = state.src.charCodeAt(pos)\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false }\n\n  // count heading level\n  let level = 1\n  ch = state.src.charCodeAt(++pos)\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++\n    ch = state.src.charCodeAt(++pos)\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false }\n\n  if (silent) { return true }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos)\n  const tmp = state.skipCharsBack(max, 0x23, pos) // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp\n  }\n\n  state.line = startLine + 1\n\n  const token_o  = state.push('heading_open', 'h' + String(level), 1)\n  token_o.markup = '########'.slice(0, level)\n  token_o.map    = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = state.src.slice(pos, max).trim()\n  token_i.map      = [startLine, state.line]\n  token_i.children = []\n\n  const token_c  = state.push('heading_close', 'h' + String(level), -1)\n  token_c.markup = '########'.slice(0, level)\n\n  return true\n}\n","// lheading (---, ===)\n\nexport default function lheading (state, startLine, endLine/*, silent */) {\n  const terminatorRules = state.md.block.ruler.getRules('paragraph')\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  const oldParentType = state.parentType\n  state.parentType = 'paragraph' // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  let level = 0\n  let marker\n  let nextLine = startLine + 1\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      let pos = state.bMarks[nextLine] + state.tShift[nextLine]\n      const max = state.eMarks[nextLine]\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos)\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker)\n          pos = state.skipSpaces(pos)\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2)\n            break\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue }\n\n    // Some tags can terminate paragraph without empty line.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false\n  }\n\n  const content = state.getLines(startLine, nextLine, state.blkIndent, false).trim()\n\n  state.line = nextLine + 1\n\n  const token_o    = state.push('heading_open', 'h' + String(level), 1)\n  token_o.markup   = String.fromCharCode(marker)\n  token_o.map      = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = content\n  token_i.map      = [startLine, state.line - 1]\n  token_i.children = []\n\n  const token_c    = state.push('heading_close', 'h' + String(level), -1)\n  token_c.markup   = String.fromCharCode(marker)\n\n  state.parentType = oldParentType\n\n  return true\n}\n","// Paragraph\n\nexport default function paragraph (state, startLine, endLine) {\n  const terminatorRules = state.md.block.ruler.getRules('paragraph')\n  const oldParentType = state.parentType\n  let nextLine = startLine + 1\n  state.parentType = 'paragraph'\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue }\n\n    // Some tags can terminate paragraph without empty line.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n  }\n\n  const content = state.getLines(startLine, nextLine, state.blkIndent, false).trim()\n\n  state.line = nextLine\n\n  const token_o    = state.push('paragraph_open', 'p', 1)\n  token_o.map      = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = content\n  token_i.map      = [startLine, state.line]\n  token_i.children = []\n\n  state.push('paragraph_close', 'p', -1)\n\n  state.parentType = oldParentType\n\n  return true\n}\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateBlock from './rules_block/state_block.mjs'\n\nimport r_table from './rules_block/table.mjs'\nimport r_code from './rules_block/code.mjs'\nimport r_fence from './rules_block/fence.mjs'\nimport r_blockquote from './rules_block/blockquote.mjs'\nimport r_hr from './rules_block/hr.mjs'\nimport r_list from './rules_block/list.mjs'\nimport r_reference from './rules_block/reference.mjs'\nimport r_html_block from './rules_block/html_block.mjs'\nimport r_heading from './rules_block/heading.mjs'\nimport r_lheading from './rules_block/lheading.mjs'\nimport r_paragraph from './rules_block/paragraph.mjs'\n\nconst _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  ['table',      r_table,      ['paragraph', 'reference']],\n  ['code',       r_code],\n  ['fence',      r_fence,      ['paragraph', 'reference', 'blockquote', 'list']],\n  ['blockquote', r_blockquote, ['paragraph', 'reference', 'blockquote', 'list']],\n  ['hr',         r_hr,         ['paragraph', 'reference', 'blockquote', 'list']],\n  ['list',       r_list,       ['paragraph', 'reference', 'blockquote']],\n  ['reference',  r_reference],\n  ['html_block', r_html_block, ['paragraph', 'reference', 'blockquote']],\n  ['heading',    r_heading,    ['paragraph', 'reference', 'blockquote']],\n  ['lheading',   r_lheading],\n  ['paragraph',  r_paragraph]\n]\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock () {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() })\n  }\n}\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const maxNesting = state.md.options.maxNesting\n  let line = startLine\n  let hasEmptyLines = false\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line)\n    if (line >= endLine) { break }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine\n      break\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n    const prevLine = state.line\n    let ok = false\n\n    for (let i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false)\n      if (ok) {\n        if (prevLine >= state.line) {\n          throw new Error(\"block rule didn't increment state.line\")\n        }\n        break\n      }\n    }\n\n    // this can only happen if user disables paragraph rule\n    if (!ok) throw new Error('none of the block rules matched')\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true\n    }\n\n    line = state.line\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true\n      line++\n      state.line = line\n    }\n  }\n}\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  if (!src) { return }\n\n  const state = new this.State(src, md, env, outTokens)\n\n  this.tokenize(state, state.line, state.lineMax)\n}\n\nParserBlock.prototype.State = StateBlock\n\nexport default ParserBlock\n","// Inline parser state\n\nimport Token from '../token.mjs'\nimport { isWhiteSpace, isPunctChar, isMdAsciiPunct } from '../common/utils.mjs'\n\nfunction StateInline (src, md, env, outTokens) {\n  this.src = src\n  this.env = env\n  this.md = md\n  this.tokens = outTokens\n  this.tokens_meta = Array(outTokens.length)\n\n  this.pos = 0\n  this.posMax = this.src.length\n  this.level = 0\n  this.pending = ''\n  this.pendingLevel = 0\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {}\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = []\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = []\n\n  // backtick length => last seen position\n  this.backticks = {}\n  this.backticksScanned = false\n\n  // Counter used to disable inline linkify-it execution\n  // inside <a> and markdown links\n  this.linkLevel = 0\n}\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  const token = new Token('text', '', 0)\n  token.content = this.pending\n  token.level = this.pendingLevel\n  this.tokens.push(token)\n  this.pending = ''\n  return token\n}\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending()\n  }\n\n  const token = new Token(type, tag, nesting)\n  let token_meta = null\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--\n    this.delimiters = this._prev_delimiters.pop()\n  }\n\n  token.level = this.level\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++\n    this._prev_delimiters.push(this.delimiters)\n    this.delimiters = []\n    token_meta = { delimiters: this.delimiters }\n  }\n\n  this.pendingLevel = this.level\n  this.tokens.push(token)\n  this.tokens_meta.push(token_meta)\n  return token\n}\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  const max = this.posMax\n  const marker = this.src.charCodeAt(start)\n\n  // treat beginning of the line as a whitespace\n  const lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20\n\n  let pos = start\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++ }\n\n  const count = pos - start\n\n  // treat end of the line as a whitespace\n  const nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20\n\n  const isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar))\n  const isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar))\n\n  const isLastWhiteSpace = isWhiteSpace(lastChar)\n  const isNextWhiteSpace = isWhiteSpace(nextChar)\n\n  const left_flanking =\n    !isNextWhiteSpace && (!isNextPunctChar || isLastWhiteSpace || isLastPunctChar)\n  const right_flanking =\n    !isLastWhiteSpace && (!isLastPunctChar || isNextWhiteSpace || isNextPunctChar)\n\n  const can_open  = left_flanking  && (canSplitWord || !right_flanking || isLastPunctChar)\n  const can_close = right_flanking && (canSplitWord || !left_flanking  || isNextPunctChar)\n\n  return { can_open, can_close, length: count }\n}\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token\n\nexport default StateInline\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar (ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true\n    default:\n      return false\n  }\n}\n\nexport default function text (state, silent) {\n  let pos = state.pos\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++\n  }\n\n  if (pos === state.pos) { return false }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos) }\n\n  state.pos = pos\n\n  return true\n}\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParserInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n}; */\n","// Process links like https://example.org/\n\n// RFC3986: scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\nconst SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i\n\nexport default function linkify (state, silent) {\n  if (!state.md.options.linkify) return false\n  if (state.linkLevel > 0) return false\n\n  const pos = state.pos\n  const max = state.posMax\n\n  if (pos + 3 > max) return false\n  if (state.src.charCodeAt(pos) !== 0x3A/* : */) return false\n  if (state.src.charCodeAt(pos + 1) !== 0x2F/* / */) return false\n  if (state.src.charCodeAt(pos + 2) !== 0x2F/* / */) return false\n\n  const match = state.pending.match(SCHEME_RE)\n  if (!match) return false\n\n  const proto = match[1]\n\n  const link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length))\n  if (!link) return false\n\n  let url = link.url\n\n  // invalid link, but still detected by linkify somehow;\n  // need to check to prevent infinite loop below\n  if (url.length <= proto.length) return false\n\n  // disallow '*' at the end of the link (conflicts with emphasis)\n  url = url.replace(/\\*+$/, '')\n\n  const fullUrl = state.md.normalizeLink(url)\n  if (!state.md.validateLink(fullUrl)) return false\n\n  if (!silent) {\n    state.pending = state.pending.slice(0, -proto.length)\n\n    const token_o = state.push('link_open', 'a', 1)\n    token_o.attrs = [['href', fullUrl]]\n    token_o.markup = 'linkify'\n    token_o.info = 'auto'\n\n    const token_t = state.push('text', '', 0)\n    token_t.content = state.md.normalizeLinkText(url)\n\n    const token_c = state.push('link_close', 'a', -1)\n    token_c.markup = 'linkify'\n    token_c.info = 'auto'\n  }\n\n  state.pos += url.length - proto.length\n  return true\n}\n","// Proceess '\\n'\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function newline (state, silent) {\n  let pos = state.pos\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false }\n\n  const pmax = state.pending.length - 1\n  const max = state.posMax\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        let ws = pmax - 1\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--\n\n        state.pending = state.pending.slice(0, ws)\n        state.push('hardbreak', 'br', 0)\n      } else {\n        state.pending = state.pending.slice(0, -1)\n        state.push('softbreak', 'br', 0)\n      }\n    } else {\n      state.push('softbreak', 'br', 0)\n    }\n  }\n\n  pos++\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++ }\n\n  state.pos = pos\n  return true\n}\n","// Process escaped chars and hardbreaks\n\nimport { isSpace } from '../common/utils.mjs'\n\nconst ESCAPED = []\n\nfor (let i = 0; i < 256; i++) { ESCAPED.push(0) }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1 })\n\nexport default function escape (state, silent) {\n  let pos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) return false\n  pos++\n\n  // '\\' at the end of the inline block\n  if (pos >= max) return false\n\n  let ch1 = state.src.charCodeAt(pos)\n\n  if (ch1 === 0x0A) {\n    if (!silent) {\n      state.push('hardbreak', 'br', 0)\n    }\n\n    pos++\n    // skip leading whitespaces from next line\n    while (pos < max) {\n      ch1 = state.src.charCodeAt(pos)\n      if (!isSpace(ch1)) break\n      pos++\n    }\n\n    state.pos = pos\n    return true\n  }\n\n  let escapedStr = state.src[pos]\n\n  if (ch1 >= 0xD800 && ch1 <= 0xDBFF && pos + 1 < max) {\n    const ch2 = state.src.charCodeAt(pos + 1)\n\n    if (ch2 >= 0xDC00 && ch2 <= 0xDFFF) {\n      escapedStr += state.src[pos + 1]\n      pos++\n    }\n  }\n\n  const origStr = '\\\\' + escapedStr\n\n  if (!silent) {\n    const token = state.push('text_special', '', 0)\n\n    if (ch1 < 256 && ESCAPED[ch1] !== 0) {\n      token.content = escapedStr\n    } else {\n      token.content = origStr\n    }\n\n    token.markup = origStr\n    token.info   = 'escape'\n  }\n\n  state.pos = pos + 1\n  return true\n}\n","// Parse backticks\n\nexport default function backtick (state, silent) {\n  let pos = state.pos\n  const ch = state.src.charCodeAt(pos)\n\n  if (ch !== 0x60/* ` */) { return false }\n\n  const start = pos\n  pos++\n  const max = state.posMax\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++ }\n\n  const marker = state.src.slice(start, pos)\n  const openerLength = marker.length\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker\n    state.pos += openerLength\n    return true\n  }\n\n  let matchEnd = pos\n  let matchStart\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++ }\n\n    const closerLength = matchEnd - matchStart\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        const token = state.push('code_inline', 'code', 0)\n        token.markup = marker\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1')\n      }\n      state.pos = matchEnd\n      return true\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true\n\n  if (!silent) state.pending += marker\n  state.pos += openerLength\n  return true\n}\n","// ~~strike through~~\n//\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nfunction strikethrough_tokenize (state, silent) {\n  const start = state.pos\n  const marker = state.src.charCodeAt(start)\n\n  if (silent) { return false }\n\n  if (marker !== 0x7E/* ~ */) { return false }\n\n  const scanned = state.scanDelims(state.pos, true)\n  let len = scanned.length\n  const ch = String.fromCharCode(marker)\n\n  if (len < 2) { return false }\n\n  let token\n\n  if (len % 2) {\n    token         = state.push('text', '', 0)\n    token.content = ch\n    len--\n  }\n\n  for (let i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0)\n    token.content = ch + ch\n\n    state.delimiters.push({\n      marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token: state.tokens.length - 1,\n      end: -1,\n      open: scanned.can_open,\n      close: scanned.can_close\n    })\n  }\n\n  state.pos += scanned.length\n\n  return true\n}\n\nfunction postProcess (state, delimiters) {\n  let token\n  const loneMarkers = []\n  const max = delimiters.length\n\n  for (let i = 0; i < max; i++) {\n    const startDelim = delimiters[i]\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue\n    }\n\n    if (startDelim.end === -1) {\n      continue\n    }\n\n    const endDelim = delimiters[startDelim.end]\n\n    token         = state.tokens[startDelim.token]\n    token.type    = 's_open'\n    token.tag     = 's'\n    token.nesting = 1\n    token.markup  = '~~'\n    token.content = ''\n\n    token         = state.tokens[endDelim.token]\n    token.type    = 's_close'\n    token.tag     = 's'\n    token.nesting = -1\n    token.markup  = '~~'\n    token.content = ''\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n      loneMarkers.push(endDelim.token - 1)\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    const i = loneMarkers.pop()\n    let j = i + 1\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++\n    }\n\n    j--\n\n    if (i !== j) {\n      token = state.tokens[j]\n      state.tokens[j] = state.tokens[i]\n      state.tokens[i] = token\n    }\n  }\n}\n\n// Walk through delimiter list and replace text tokens with tags\n//\nfunction strikethrough_postProcess (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  postProcess(state, state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters)\n    }\n  }\n}\n\nexport default {\n  tokenize: strikethrough_tokenize,\n  postProcess: strikethrough_postProcess\n}\n","// Process *this* and _that_\n//\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nfunction emphasis_tokenize (state, silent) {\n  const start = state.pos\n  const marker = state.src.charCodeAt(start)\n\n  if (silent) { return false }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false }\n\n  const scanned = state.scanDelims(state.pos, marker === 0x2A)\n\n  for (let i = 0; i < scanned.length; i++) {\n    const token = state.push('text', '', 0)\n    token.content = String.fromCharCode(marker)\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token: state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end: -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open: scanned.can_open,\n      close: scanned.can_close\n    })\n  }\n\n  state.pos += scanned.length\n\n  return true\n}\n\nfunction postProcess (state, delimiters) {\n  const max = delimiters.length\n\n  for (let i = max - 1; i >= 0; i--) {\n    const startDelim = delimiters[i]\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue\n    }\n\n    const endDelim = delimiters[startDelim.end]\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    const isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1\n\n    const ch = String.fromCharCode(startDelim.marker)\n\n    const token_o   = state.tokens[startDelim.token]\n    token_o.type    = isStrong ? 'strong_open' : 'em_open'\n    token_o.tag     = isStrong ? 'strong' : 'em'\n    token_o.nesting = 1\n    token_o.markup  = isStrong ? ch + ch : ch\n    token_o.content = ''\n\n    const token_c   = state.tokens[endDelim.token]\n    token_c.type    = isStrong ? 'strong_close' : 'em_close'\n    token_c.tag     = isStrong ? 'strong' : 'em'\n    token_c.nesting = -1\n    token_c.markup  = isStrong ? ch + ch : ch\n    token_c.content = ''\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = ''\n      state.tokens[delimiters[startDelim.end + 1].token].content = ''\n      i--\n    }\n  }\n}\n\n// Walk through delimiter list and replace text tokens with tags\n//\nfunction emphasis_post_process (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  postProcess(state, state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters)\n    }\n  }\n}\n\nexport default {\n  tokenize: emphasis_tokenize,\n  postProcess: emphasis_post_process\n}\n","// Process [link](<to> \"stuff\")\n\nimport { normalizeReference, isSpace } from '../common/utils.mjs'\n\nexport default function link (state, silent) {\n  let code, label, res, ref\n  let href = ''\n  let title = ''\n  let start = state.pos\n  let parseReference = true\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false }\n\n  const oldPos = state.pos\n  const max = state.posMax\n  const labelStart = state.pos + 1\n  const labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true)\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false }\n\n  let pos = labelEnd + 1\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n    if (pos >= max) { return false }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax)\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str)\n      if (state.md.validateLink(href)) {\n        pos = res.pos\n      } else {\n        href = ''\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos)\n        if (!isSpace(code) && code !== 0x0A) { break }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax)\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str\n        pos = res.pos\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos)\n          if (!isSpace(code) && code !== 0x0A) { break }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true\n    }\n    pos++\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1\n      pos = state.md.helpers.parseLinkLabel(state, pos)\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++)\n      } else {\n        pos = labelEnd + 1\n      }\n    } else {\n      pos = labelEnd + 1\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd) }\n\n    ref = state.env.references[normalizeReference(label)]\n    if (!ref) {\n      state.pos = oldPos\n      return false\n    }\n    href = ref.href\n    title = ref.title\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart\n    state.posMax = labelEnd\n\n    const token_o = state.push('link_open', 'a', 1)\n    const attrs = [['href', href]]\n    token_o.attrs  = attrs\n    if (title) {\n      attrs.push(['title', title])\n    }\n\n    state.linkLevel++\n    state.md.inline.tokenize(state)\n    state.linkLevel--\n\n    state.push('link_close', 'a', -1)\n  }\n\n  state.pos = pos\n  state.posMax = max\n  return true\n}\n","// Process ![image](<src> \"title\")\n\nimport { normalizeReference, isSpace } from '../common/utils.mjs'\n\nexport default function image (state, silent) {\n  let code, content, label, pos, ref, res, title, start\n  let href = ''\n  const oldPos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false }\n\n  const labelStart = state.pos + 2\n  const labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false)\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false }\n\n  pos = labelEnd + 1\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n    if (pos >= max) { return false }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax)\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str)\n      if (state.md.validateLink(href)) {\n        pos = res.pos\n      } else {\n        href = ''\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax)\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str\n      pos = res.pos\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos)\n        if (!isSpace(code) && code !== 0x0A) { break }\n      }\n    } else {\n      title = ''\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos\n      return false\n    }\n    pos++\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1\n      pos = state.md.helpers.parseLinkLabel(state, pos)\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++)\n      } else {\n        pos = labelEnd + 1\n      }\n    } else {\n      pos = labelEnd + 1\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd) }\n\n    ref = state.env.references[normalizeReference(label)]\n    if (!ref) {\n      state.pos = oldPos\n      return false\n    }\n    href = ref.href\n    title = ref.title\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd)\n\n    const tokens = []\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens\n    )\n\n    const token = state.push('image', 'img', 0)\n    const attrs = [['src', href], ['alt', '']]\n    token.attrs = attrs\n    token.children = tokens\n    token.content = content\n\n    if (title) {\n      attrs.push(['title', title])\n    }\n  }\n\n  state.pos = pos\n  state.posMax = max\n  return true\n}\n","// Process autolinks '<protocol:...>'\n\n/* eslint max-len:0 */\nconst EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/\n/* eslint-disable-next-line no-control-regex */\nconst AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.-]{1,31}):([^<>\\x00-\\x20]*)$/\n\nexport default function autolink (state, silent) {\n  let pos = state.pos\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false }\n\n  const start = state.pos\n  const max = state.posMax\n\n  for (;;) {\n    if (++pos >= max) return false\n\n    const ch = state.src.charCodeAt(pos)\n\n    if (ch === 0x3C /* < */) return false\n    if (ch === 0x3E /* > */) break\n  }\n\n  const url = state.src.slice(start + 1, pos)\n\n  if (AUTOLINK_RE.test(url)) {\n    const fullUrl = state.md.normalizeLink(url)\n    if (!state.md.validateLink(fullUrl)) { return false }\n\n    if (!silent) {\n      const token_o   = state.push('link_open', 'a', 1)\n      token_o.attrs   = [['href', fullUrl]]\n      token_o.markup  = 'autolink'\n      token_o.info    = 'auto'\n\n      const token_t   = state.push('text', '', 0)\n      token_t.content = state.md.normalizeLinkText(url)\n\n      const token_c   = state.push('link_close', 'a', -1)\n      token_c.markup  = 'autolink'\n      token_c.info    = 'auto'\n    }\n\n    state.pos += url.length + 2\n    return true\n  }\n\n  if (EMAIL_RE.test(url)) {\n    const fullUrl = state.md.normalizeLink('mailto:' + url)\n    if (!state.md.validateLink(fullUrl)) { return false }\n\n    if (!silent) {\n      const token_o   = state.push('link_open', 'a', 1)\n      token_o.attrs   = [['href', fullUrl]]\n      token_o.markup  = 'autolink'\n      token_o.info    = 'auto'\n\n      const token_t   = state.push('text', '', 0)\n      token_t.content = state.md.normalizeLinkText(url)\n\n      const token_c   = state.push('link_close', 'a', -1)\n      token_c.markup  = 'autolink'\n      token_c.info    = 'auto'\n    }\n\n    state.pos += url.length + 2\n    return true\n  }\n\n  return false\n}\n","// Process html tags\n\nimport { HTML_TAG_RE } from '../common/html_re.mjs'\n\nfunction isLinkOpen (str) {\n  return /^<a[>\\s]/i.test(str)\n}\nfunction isLinkClose (str) {\n  return /^<\\/a\\s*>/i.test(str)\n}\n\nfunction isLetter (ch) {\n  /* eslint no-bitwise:0 */\n  const lc = ch | 0x20 // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */)\n}\n\nexport default function html_inline (state, silent) {\n  if (!state.md.options.html) { return false }\n\n  // Check start\n  const max = state.posMax\n  const pos = state.pos\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false\n  }\n\n  // Quick fail on second char\n  const ch = state.src.charCodeAt(pos + 1)\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false\n  }\n\n  const match = state.src.slice(pos).match(HTML_TAG_RE)\n  if (!match) { return false }\n\n  if (!silent) {\n    const token = state.push('html_inline', '', 0)\n    token.content = match[0]\n\n    if (isLinkOpen(token.content))  state.linkLevel++\n    if (isLinkClose(token.content)) state.linkLevel--\n  }\n  state.pos += match[0].length\n  return true\n}\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\nimport { decodeHTML } from 'entities'\nimport { isValidEntityCode, fromCodePoint } from '../common/utils.mjs'\n\nconst DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i\nconst NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i\n\nexport default function entity (state, silent) {\n  const pos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) return false\n\n  if (pos + 1 >= max) return false\n\n  const ch = state.src.charCodeAt(pos + 1)\n\n  if (ch === 0x23 /* # */) {\n    const match = state.src.slice(pos).match(DIGITAL_RE)\n    if (match) {\n      if (!silent) {\n        const code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10)\n\n        const token   = state.push('text_special', '', 0)\n        token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD)\n        token.markup  = match[0]\n        token.info    = 'entity'\n      }\n      state.pos += match[0].length\n      return true\n    }\n  } else {\n    const match = state.src.slice(pos).match(NAMED_RE)\n    if (match) {\n      const decoded = decodeHTML(match[0])\n      if (decoded !== match[0]) {\n        if (!silent) {\n          const token   = state.push('text_special', '', 0)\n          token.content = decoded\n          token.markup  = match[0]\n          token.info    = 'entity'\n        }\n        state.pos += match[0].length\n        return true\n      }\n    }\n  }\n\n  return false\n}\n","// For each opening emphasis-like marker find a matching closing one\n//\n\nfunction processDelimiters (delimiters) {\n  const openersBottom = {}\n  const max = delimiters.length\n\n  if (!max) return\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  let headerIdx = 0\n  let lastTokenIdx = -2 // needs any value lower than -1\n  const jumps = []\n\n  for (let closerIdx = 0; closerIdx < max; closerIdx++) {\n    const closer = delimiters[closerIdx]\n\n    jumps.push(0)\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx\n    }\n\n    lastTokenIdx = closer.token\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0\n\n    if (!closer.close) continue\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    /* eslint-disable-next-line no-prototype-builtins */\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [-1, -1, -1, -1, -1, -1]\n    }\n\n    const minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)]\n\n    let openerIdx = headerIdx - jumps[headerIdx] - 1\n\n    let newMinOpenerIdx = openerIdx\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      const opener = delimiters[openerIdx]\n\n      if (opener.marker !== closer.marker) continue\n\n      if (opener.open && opener.end < 0) {\n        let isOddMatch = false\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          const lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open\n            ? jumps[openerIdx - 1] + 1\n            : 0\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump\n          jumps[openerIdx] = lastJump\n\n          closer.open  = false\n          opener.end   = closerIdx\n          opener.close = false\n          newMinOpenerIdx = -1\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2\n          break\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx\n    }\n  }\n}\n\nexport default function link_pairs (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  processDelimiters(state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(tokens_meta[curr].delimiters)\n    }\n  }\n}\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n\nexport default function fragments_join (state) {\n  let curr, last\n  let level = 0\n  const tokens = state.tokens\n  const max = state.tokens.length\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level-- // closing tag\n    tokens[curr].level = level\n    if (tokens[curr].nesting > 0) level++ // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr] }\n\n      last++\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last\n  }\n}\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateInline from './rules_inline/state_inline.mjs'\n\nimport r_text from './rules_inline/text.mjs'\nimport r_linkify from './rules_inline/linkify.mjs'\nimport r_newline from './rules_inline/newline.mjs'\nimport r_escape from './rules_inline/escape.mjs'\nimport r_backticks from './rules_inline/backticks.mjs'\nimport r_strikethrough from './rules_inline/strikethrough.mjs'\nimport r_emphasis from './rules_inline/emphasis.mjs'\nimport r_link from './rules_inline/link.mjs'\nimport r_image from './rules_inline/image.mjs'\nimport r_autolink from './rules_inline/autolink.mjs'\nimport r_html_inline from './rules_inline/html_inline.mjs'\nimport r_entity from './rules_inline/entity.mjs'\n\nimport r_balance_pairs from './rules_inline/balance_pairs.mjs'\nimport r_fragments_join from './rules_inline/fragments_join.mjs'\n\n// Parser rules\n\nconst _rules = [\n  ['text',            r_text],\n  ['linkify',         r_linkify],\n  ['newline',         r_newline],\n  ['escape',          r_escape],\n  ['backticks',       r_backticks],\n  ['strikethrough',   r_strikethrough.tokenize],\n  ['emphasis',        r_emphasis.tokenize],\n  ['link',            r_link],\n  ['image',           r_image],\n  ['autolink',        r_autolink],\n  ['html_inline',     r_html_inline],\n  ['entity',          r_entity]\n]\n\n// `rule2` ruleset was created specifically for emphasis/strikethrough\n// post-processing and may be changed in the future.\n//\n// Don't use this for anything except pairs (plugins working with `balance_pairs`).\n//\nconst _rules2 = [\n  ['balance_pairs',   r_balance_pairs],\n  ['strikethrough',   r_strikethrough.postProcess],\n  ['emphasis',        r_emphasis.postProcess],\n  // rules for pairs separate '**' into its own text tokens, which may be left unused,\n  // rule below merges unused segments back with the rest of the text\n  ['fragments_join',  r_fragments_join]\n]\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline () {\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1])\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler()\n\n  for (let i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1])\n  }\n}\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  const pos = state.pos\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const maxNesting = state.md.options.maxNesting\n  const cache = state.cache\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos]\n    return\n  }\n\n  let ok = false\n\n  if (state.level < maxNesting) {\n    for (let i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++\n      ok = rules[i](state, true)\n      state.level--\n\n      if (ok) {\n        if (pos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\") }\n        break\n      }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax\n  }\n\n  if (!ok) { state.pos++ }\n  cache[pos] = state.pos\n}\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const end = state.posMax\n  const maxNesting = state.md.options.maxNesting\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n    const prevPos = state.pos\n    let ok = false\n\n    if (state.level < maxNesting) {\n      for (let i = 0; i < len; i++) {\n        ok = rules[i](state, false)\n        if (ok) {\n          if (prevPos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\") }\n          break\n        }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break }\n      continue\n    }\n\n    state.pending += state.src[state.pos++]\n  }\n\n  if (state.pending) {\n    state.pushPending()\n  }\n}\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  const state = new this.State(str, md, env, outTokens)\n\n  this.tokenize(state)\n\n  const rules = this.ruler2.getRules('')\n  const len = rules.length\n\n  for (let i = 0; i < len; i++) {\n    rules[i](state)\n  }\n}\n\nParserInline.prototype.State = StateInline\n\nexport default ParserInline\n","import { Any, Cc, Z, P } from 'uc.micro'\n\nexport default function (opts) {\n  const re = {}\n  opts = opts || {}\n\n  re.src_Any = Any.source\n  re.src_Cc = Cc.source\n  re.src_Z = Z.source\n  re.src_P = P.source\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [re.src_Z, re.src_P, re.src_Cc].join('|')\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [re.src_Z, re.src_Cc].join('|')\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  const text_separators = '[><\\uff5c]'\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')'\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?'\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?'\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')' +\n    '(?!' + (opts['---'] ? '-(?!--)|' : '-|') + '_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))'\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n\n          // allow `I'm_king` if no pair found\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-])|' +\n\n          // google has many dots in \"google search\" links (#66, #81).\n          // github has ... in commit range links,\n          // Restrict to\n          // - english\n          // - percent-encoded\n          // - parts of file path\n          // - params separator\n          // until more examples found.\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' +\n\n          '\\\\.(?!' + re.src_ZCc + '|[.]|$)|' +\n          (opts['---']\n            ? '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            : '\\\\-+|'\n          ) +\n          // allow `,,,` in paths\n          ',(?!' + re.src_ZCc + '|$)|' +\n\n          // allow `;` if not followed by space-like char\n          ';(?!' + re.src_ZCc + '|$)|' +\n\n          // allow `!!!` in paths, but not at the end\n          '\\\\!+(?!' + re.src_ZCc + '|[!]|$)|' +\n\n          '\\\\?(?!' + re.src_ZCc + '|[?]|$)' +\n        ')+' +\n      '|\\\\/' +\n    ')?'\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*'\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}'\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')'\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')'\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/* _root */ + ')' +\n    ')'\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')'\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))'\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator\n\n  //\n  // Main rules\n  //\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))'\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')'\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')'\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')'\n\n  return re\n}\n","import reFactory from './lib/re.mjs'\n\n//\n// Helpers\n//\n\n// Merge objects\n//\nfunction assign (obj /* from1, from2, from3, ... */) {\n  const sources = Array.prototype.slice.call(arguments, 1)\n\n  sources.forEach(function (source) {\n    if (!source) { return }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key]\n    })\n  })\n\n  return obj\n}\n\nfunction _class (obj) { return Object.prototype.toString.call(obj) }\nfunction isString (obj) { return _class(obj) === '[object String]' }\nfunction isObject (obj) { return _class(obj) === '[object Object]' }\nfunction isRegExp (obj) { return _class(obj) === '[object RegExp]' }\nfunction isFunction (obj) { return _class(obj) === '[object Function]' }\n\nfunction escapeRE (str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&') }\n\n//\n\nconst defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n}\n\nfunction isOptionsObj (obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    /* eslint-disable-next-line no-prototype-builtins */\n    return acc || defaultOptions.hasOwnProperty(k)\n  }, false)\n}\n\nconst defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http = new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        )\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length\n      }\n      return 0\n    }\n  },\n  'https:': 'http:',\n  'ftp:': 'http:',\n  '//': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http = new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        )\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0 }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0 }\n        return tail.match(self.re.no_http)[0].length\n      }\n      return 0\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.mailto) {\n        self.re.mailto = new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        )\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length\n      }\n      return 0\n    }\n  }\n}\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\n/* eslint-disable-next-line max-len */\nconst tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]'\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nconst tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|')\n\nfunction resetScanCache (self) {\n  self.__index__ = -1\n  self.__text_cache__ = ''\n}\n\nfunction createValidator (re) {\n  return function (text, pos) {\n    const tail = text.slice(pos)\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length\n    }\n    return 0\n  }\n}\n\nfunction createNormalizer () {\n  return function (match, self) {\n    self.normalize(match)\n  }\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile (self) {\n  // Load & clone RE patterns.\n  const re = self.re = reFactory(self.__opts__)\n\n  // Define dynamic patterns\n  const tlds = self.__tlds__.slice()\n\n  self.onCompile()\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re)\n  }\n  tlds.push(re.src_xn)\n\n  re.src_tlds = tlds.join('|')\n\n  function untpl (tpl) { return tpl.replace('%TLDS%', re.src_tlds) }\n\n  re.email_fuzzy = RegExp(untpl(re.tpl_email_fuzzy), 'i')\n  re.link_fuzzy = RegExp(untpl(re.tpl_link_fuzzy), 'i')\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i')\n  re.host_fuzzy_test = RegExp(untpl(re.tpl_host_fuzzy_test), 'i')\n\n  //\n  // Compile each schema\n  //\n\n  const aliases = []\n\n  self.__compiled__ = {} // Reset compiled data\n\n  function schemaError (name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val)\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    const val = self.__schemas__[name]\n\n    // skip disabled methods\n    if (val === null) { return }\n\n    const compiled = { validate: null, link: null }\n\n    self.__compiled__[name] = compiled\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate)\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate\n      } else {\n        schemaError(name, val)\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer()\n      } else {\n        schemaError(name, val)\n      }\n\n      return\n    }\n\n    if (isString(val)) {\n      aliases.push(name)\n      return\n    }\n\n    schemaError(name, val)\n  })\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize\n  })\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() }\n\n  //\n  // Build schema condition\n  //\n  const slist = Object.keys(self.__compiled__)\n    .filter(function (name) {\n      // Filter disabled & fake schemas\n      return name.length > 0 && self.__compiled__[name]\n    })\n    .map(escapeRE)\n    .join('|')\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i')\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig')\n  self.re.schema_at_start = RegExp('^' + self.re.schema_search.source, 'i')\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  )\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self)\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match (self, shift) {\n  const start = self.__index__\n  const end = self.__last_index__\n  const text = self.__text_cache__.slice(start, end)\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema = self.__schema__.toLowerCase()\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index = start + shift\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw = text\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text = text\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url = text\n}\n\nfunction createMatch (self, shift) {\n  const match = new Match(self, shift)\n\n  self.__compiled__[match.schema].normalize(match, self)\n\n  return match\n}\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt (schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options)\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas\n      schemas = {}\n    }\n  }\n\n  this.__opts__ = assign({}, defaultOptions, options)\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__ = -1\n  this.__last_index__ = -1 // Next scan position\n  this.__schema__ = ''\n  this.__text_cache__ = ''\n\n  this.__schemas__ = assign({}, defaultSchemas, schemas)\n  this.__compiled__ = {}\n\n  this.__tlds__ = tlds_default\n  this.__tlds_replaced__ = false\n\n  this.re = {}\n\n  compile(this)\n}\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add (schema, definition) {\n  this.__schemas__[schema] = definition\n  compile(this)\n  return this\n}\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set (options) {\n  this.__opts__ = assign(this.__opts__, options)\n  return this\n}\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test (text) {\n  // Reset scan cache\n  this.__text_cache__ = text\n  this.__index__ = -1\n\n  if (!text.length) { return false }\n\n  let m, ml, me, len, shift, next, re, tld_pos, at_pos\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search\n    re.lastIndex = 0\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex)\n      if (len) {\n        this.__schema__ = m[2]\n        this.__index__ = m.index + m[1].length\n        this.__last_index__ = m.index + m[0].length + len\n        break\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test)\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n          shift = ml.index + ml[1].length\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__ = ''\n            this.__index__ = shift\n            this.__last_index__ = ml.index + ml[0].length\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@')\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n        shift = me.index + me[1].length\n        next = me.index + me[0].length\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__ = 'mailto:'\n          this.__index__ = shift\n          this.__last_index__ = next\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0\n}\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest (text) {\n  return this.re.pretest.test(text)\n}\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt (text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this)\n}\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match (text) {\n  const result = []\n  let shift = 0\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift))\n    shift = this.__last_index__\n  }\n\n  // Cut head if cache was used\n  let tail = shift ? text.slice(shift) : text\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift))\n\n    tail = tail.slice(this.__last_index__)\n    shift += this.__last_index__\n  }\n\n  if (result.length) {\n    return result\n  }\n\n  return null\n}\n\n/**\n * LinkifyIt#matchAtStart(text) -> Match|null\n *\n * Returns fully-formed (not fuzzy) link if it starts at the beginning\n * of the string, and null otherwise.\n **/\nLinkifyIt.prototype.matchAtStart = function matchAtStart (text) {\n  // Reset scan cache\n  this.__text_cache__ = text\n  this.__index__ = -1\n\n  if (!text.length) return null\n\n  const m = this.re.schema_at_start.exec(text)\n  if (!m) return null\n\n  const len = this.testSchemaAt(text, m[2], m[0].length)\n  if (!len) return null\n\n  this.__schema__ = m[2]\n  this.__index__ = m.index + m[1].length\n  this.__last_index__ = m.index + m[0].length + len\n\n  return createMatch(this, 0)\n}\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds (list, keepOld) {\n  list = Array.isArray(list) ? list : [list]\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice()\n    this.__tlds_replaced__ = true\n    compile(this)\n    return this\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n    .sort()\n    .filter(function (el, idx, arr) {\n      return el !== arr[idx - 1]\n    })\n    .reverse()\n\n  compile(this)\n  return this\n}\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize (match) {\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url\n  }\n}\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile () {\n}\n\nexport default LinkifyIt\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7F]/; // Note: U+007F DEL is excluded too.\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, callback) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = callback(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {String} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(domain, callback) {\n\tconst parts = domain.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tdomain = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tdomain = domain.replace(regexSeparators, '\\x2E');\n\tconst labels = domain.split('.');\n\tconst encoded = map(labels, callback).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = codePoints => String.fromCodePoint(...codePoints);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint >= 0x30 && codePoint < 0x3A) {\n\t\treturn 26 + (codePoint - 0x30);\n\t}\n\tif (codePoint >= 0x41 && codePoint < 0x5B) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint >= 0x61 && codePoint < 0x7B) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tconst oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\t\t\tif (digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tconst inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tconst basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue === n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.3.1',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n","// markdown-it default options\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: false,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: false,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 100\n  },\n\n  components: {\n    core: {},\n    block: {},\n    inline: {}\n  }\n}\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: false,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: false,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 20\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'fragments_join'\n      ]\n    }\n  }\n}\n","// Commonmark default options\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: true,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: true,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 20\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'fragments_join'\n      ]\n    }\n  }\n}\n","// Main parser class\n\nimport * as utils from './common/utils.mjs'\nimport * as helpers from './helpers/index.mjs'\nimport Renderer from './renderer.mjs'\nimport ParserCore from './parser_core.mjs'\nimport ParserBlock from './parser_block.mjs'\nimport ParserInline from './parser_inline.mjs'\nimport LinkifyIt from 'linkify-it'\nimport * as mdurl from 'mdurl'\nimport punycode from 'punycode.js'\n\nimport cfg_default from './presets/default.mjs'\nimport cfg_zero from './presets/zero.mjs'\nimport cfg_commonmark from './presets/commonmark.mjs'\n\nconst config = {\n  default: cfg_default,\n  zero: cfg_zero,\n  commonmark: cfg_commonmark\n}\n\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nconst BAD_PROTO_RE = /^(vbscript|javascript|file|data):/\nconst GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/\n\nfunction validateLink (url) {\n  // url should be normalized at this point, and existing entities are decoded\n  const str = url.trim().toLowerCase()\n\n  return BAD_PROTO_RE.test(str) ? GOOD_DATA_RE.test(str) : true\n}\n\nconst RECODE_HOSTNAME_FOR = ['http:', 'https:', 'mailto:']\n\nfunction normalizeLink (url) {\n  const parsed = mdurl.parse(url, true)\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname)\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed))\n}\n\nfunction normalizeLinkText (url) {\n  const parsed = mdurl.parse(url, true)\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname)\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%')\n}\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.mjs) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.mjs) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.mjs) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.mjs) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>` or `<code>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre><code class=\"hljs\">' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre><code class=\"hljs\">' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt (presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options)\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {}\n      presetName = 'default'\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline()\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock()\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore()\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.mjs).\n   **/\n  this.renderer = new Renderer()\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.mjs)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt()\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.mjs).\n   **/\n  this.utils = utils\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers)\n\n  this.options = {}\n  this.configure(presetName)\n\n  if (options) { this.set(options) }\n}\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options)\n  return this\n}\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  const self = this\n\n  if (utils.isString(presets)) {\n    const presetName = presets\n    presets = config[presetName]\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name') }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty') }\n\n  if (presets.options) { self.set(presets.options) }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules)\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2)\n      }\n    })\n  }\n  return this\n}\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  let result = []\n\n  if (!Array.isArray(list)) { list = [list] }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true))\n  }, this)\n\n  result = result.concat(this.inline.ruler2.enable(list, true))\n\n  const missed = list.filter(function (name) { return result.indexOf(name) < 0 })\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed)\n  }\n\n  return this\n}\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  let result = []\n\n  if (!Array.isArray(list)) { list = [list] }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true))\n  }, this)\n\n  result = result.concat(this.inline.ruler2.disable(list, true))\n\n  const missed = list.filter(function (name) { return result.indexOf(name) < 0 })\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed)\n  }\n  return this\n}\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  const args = [this].concat(Array.prototype.slice.call(arguments, 1))\n  plugin.apply(plugin, args)\n  return this\n}\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String')\n  }\n\n  const state = new this.core.State(src, this, env)\n\n  this.core.process(state)\n\n  return state.tokens\n}\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {}\n\n  return this.renderer.render(this.parse(src, env), this.options, env)\n}\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  const state = new this.core.State(src, this, env)\n\n  state.inlineMode = true\n  this.core.process(state)\n\n  return state.tokens\n}\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {}\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env)\n}\n\nexport default MarkdownIt\n","<template>\r\n  <div class=\"markdown-body\" v-if=\"content\" v-html=\"html\">\r\n  </div>\r\n  <div class=\"markdown-body\" v-else>\r\n    <slot></slot>\r\n  </div>\r\n</template>\r\n<script setup>\r\nimport { computed, defineProps } from 'vue'\r\nimport markdownIt from 'markdown-it'\r\nconst props = defineProps({\r\n  content: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  options: {\r\n    type: Object,\r\n    default: () => ({})\r\n  }\r\n})\r\nconst html = computed(() => {\r\n  return markdownIt(Object.assign({\r\n    html: true,\r\n    linkify: true,\r\n    typographer: true\r\n  }, props.options)).render(props.content)\r\n})\r\n</script>\r\n<style lang=\"scss\">\r\n.markdown-body {\r\n  font-size: 14px !important;\r\n  line-height: 1.4728 !important;\r\n  padding: 4px 4px 2px;\r\n\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  h5,\r\n  h6 {\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  blockquote,\r\n  details,\r\n  dl,\r\n  ol,\r\n  p,\r\n  pre,\r\n  table,\r\n  ul {\r\n    margin-top: 0;\r\n    margin-bottom: 8px;\r\n    word-break: break-all;\r\n  }\r\n\r\n  .anchor {\r\n    pointer-events: none;\r\n\r\n    .octicon-link {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  code {\r\n    margin: -2px 2px 2px;\r\n    padding: .1em .3em;\r\n    vertical-align: middle;\r\n    display: inline-block;\r\n    color: rgb(255, 100, 100) !important;\r\n  }\r\n\r\n  pre {\r\n    overflow: auto;\r\n    white-space: pre-wrap;\r\n    word-wrap: break-word;\r\n    max-width: 100%;\r\n\r\n    code {\r\n      background-color: transparent;\r\n    }\r\n  }\r\n\r\n  font[color=warning] {\r\n    color: rgb(234, 159, 0) !important;\r\n  }\r\n\r\n  img {\r\n    max-width: 120px !important;\r\n    max-height: 120px !important;\r\n    cursor: pointer;\r\n  }\r\n}\r\n</style>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=576716e3&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <el-main>\r\n    <el-row :gutter=\"20\">\r\n      <el-col v-for=\"(command, index) in commands\" :key=\"index\" :span=\"4\">\r\n        <el-card class=\"text-center\" body-class=\"pa-2\" shadow=\"hover\">\r\n          <template #header>\r\n            <div class=\"text-center\">\r\n              <div class=\"fs-16 pb-2\">{{ command.name }}</div>\r\n              <div class=\"desc fs-12 opa-70\">{{ command.description }}</div>\r\n            </div>\r\n          </template>\r\n          <el-input v-if=\"command.editable\" v-model=\"command.content\" type=\"textarea\" :rows=\"3\"></el-input>\r\n          <markdownIt v-else :content=\"command.content\">\r\n            <el-empty class=\"pt-6 pb-0\" description=\" \" :image-size=\"40\"></el-empty>\r\n          </markdownIt>\r\n          <template #footer>\r\n            <el-button>复制</el-button>\r\n            <el-button type=\"success\">使用</el-button>\r\n            <el-button type=\"danger\" @click=\"handleExec(command)\">运行</el-button>\r\n          </template>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n  </el-main>\r\n</template>\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport api from '@/api'\r\nimport markdownIt from '@/components/markdown-it'\r\nconst commands = ref([\r\n  {\r\n    name: '自定义',\r\n    description: '自定义命令',\r\n    wait: true,\r\n    content: '',\r\n    editable: true\r\n  }\r\n])\r\nconst handleExec = ({ wait, content }) => {\r\n  if (content) {\r\n    api.exec({\r\n      wait,\r\n      commandLines: content.replace(/^\\n+|\\n+$/g, '')\r\n    })\r\n  }\r\n}\r\nconst initData = () => {\r\n  api.market({}).then(res => {\r\n    commands.value = commands.value.slice(0, 1).concat(res.data)\r\n  }).catch(console.log)\r\n}\r\ninitData()\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.desc {\r\n  height: 32px;\r\n}\r\n.markdown-body {\r\n  height: 80px;\r\n  overflow: auto;\r\n  padding: 5px;\r\n  margin: 5px;\r\n  background: #333;\r\n  text-align: left;\r\n}\r\n</style>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=e254d51c&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-e254d51c\"]])\n\nexport default __exports__"],"names":["market","data","fetchApi","export","open","exec","stop","baseUrl","url","method","Promise","resolve","reject","fetch","config","headers","body","JSON","stringify","then","res","json","code","catch","downloadFile","content","link","document","createElement","href","URL","createObjectURL","Blob","download","click","decodeCache","getDecodeCache","exclude","cache","i","ch","String","fromCharCode","push","length","charCodeAt","toString","toUpperCase","slice","decode","string","defaultChars","replace","seq","result","l","b1","parseInt","b2","chr","b3","b4","componentChars","encodeCache","getEncodeCache","test","encode","keepEscaped","nextCode","encodeURIComponent","format","protocol","slashes","auth","hostname","indexOf","port","pathname","search","hash","Url","this","protocolPattern","portPattern","simplePathPattern","delims","unwise","concat","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","hostlessProtocol","javascript","slashedProtocol","http","https","ftp","gopher","file","urlParse","slashesDenoteHost","u","parse","prototype","lowerProto","hec","rest","trim","split","simplePath","proto","toLowerCase","substr","match","atSign","hostEnd","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","j","k","validParts","notHost","bit","unshift","join","qm","Uint16Array","map","c","decodeMap","Map","fromCodePoint","_a","codePoint","output","replaceCodePoint","get","CharCodes","TO_LOWER_BIT","BinTrieFlags","EntityDecoderState","DecodingMode","isNumber","ZERO","NINE","isHexadecimalCharacter","UPPER_A","UPPER_F","LOWER_A","LOWER_F","isAsciiAlphaNumeric","UPPER_Z","LOWER_Z","isEntityInAttributeInvalidEnd","EQUALS","EntityDecoder","constructor","decodeTree","emitCodePoint","errors","state","EntityStart","consumed","treeIndex","excess","decodeMode","Strict","startEntity","write","str","offset","NUM","NumericStart","stateNumericStart","NamedEntity","stateNamedEntity","NumericDecimal","stateNumericDecimal","NumericHex","stateNumericHex","LOWER_X","addToNumericResult","start","end","base","digitCount","Math","pow","startIdx","char","emitNumericEntity","lastCp","expectedLength","absenceOfDigitsInNumericCharacterReference","SEMI","missingSemicolonAfterCharacterReference","validateNumericCharacterReference","current","valueLength","VALUE_LENGTH","determineBranch","max","Attribute","emitNotTerminatedNamedEntity","emitNamedEntityData","getDecoder","ret","decoder","lastIndex","len","nodeIdx","branchCount","BRANCH_LENGTH","jumpOffset","JUMP_TABLE","value","lo","hi","mid","midVal","htmlDecoder","htmlDecodeTree","xmlDecodeTree","decodeHTML","mode","Legacy","restoreDiff","arr","v","n","o","xmlCodeMap","codePointAt","getEscaper","regex","lastIdx","index","substring","EntityLevel","EncodingMode","_class","obj","Object","call","isString","_hasOwnProperty","hasOwnProperty","has","object","key","assign","sources","Array","arguments","forEach","source","TypeError","keys","arrayReplaceAt","src","pos","newElements","isValidEntityCode","surrogate1","surrogate2","UNESCAPE_MD_RE","ENTITY_RE","UNESCAPE_ALL_RE","RegExp","DIGITAL_ENTITY_TEST_RE","replaceEntityPattern","name","decoded","unescapeMd","unescapeAll","escaped","entity","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","escapeHtml","REGEXP_ESCAPE_RE","escapeRE","isSpace","isWhiteSpace","isPunctChar","ucmicro","isMdAsciiPunct","normalizeReference","lib","mdurl","parseLinkLabel","disableNested","level","found","marker","prevPos","posMax","oldPos","md","inline","skipToken","labelEnd","parseLinkDestination","ok","parseLinkTitle","prev_state","can_continue","default_rules","Renderer","rules","code_inline","tokens","idx","options","env","slf","token","renderAttrs","code_block","fence","info","highlighted","langName","langAttrs","highlight","attrIndex","tmpAttrs","attrs","langPrefix","tmpToken","image","renderInlineAsText","children","renderToken","hardbreak","xhtmlOut","softbreak","breaks","text","html_block","html_inline","hidden","block","nesting","tag","needLf","nextToken","type","renderInline","render","Ruler","__rules__","__cache__","__find__","__compile__","self","chains","rule","enabled","alt","altName","chain","fn","at","opt","Error","before","beforeName","ruleName","splice","after","afterName","enable","list","ignoreInvalid","isArray","enableOnly","disable","getRules","chainName","Token","markup","meta","attrPush","attrData","attrSet","attrGet","attrJoin","StateCore","inlineMode","NEWLINES_RE","NULL_RE","normalize","tok","isLinkOpen","isLinkClose","linkify","blockTokens","pretest","htmlLinkLevel","currentToken","links","nodes","lastPos","ln","fullUrl","normalizeLink","validateLink","urlText","schema","normalizeLinkText","token_o","token_t","token_c","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","blkIdx","typographer","QUOTE_TEST_RE","QUOTE_RE","APOSTROPHE","replaceAt","process_inlines","stack","thisLevel","OUTER","t","canOpen","canClose","isSingle","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","item","single","openQuote","closeQuote","quotes","smartquotes","text_join","curr","last","_rules","r_normalize","r_block","r_inline","r_linkify","r_replacements","r_smartquotes","r_text_join","Core","ruler","process","State","StateBlock","bMarks","eMarks","tShift","sCount","bsCount","blkIndent","line","lineMax","tight","ddIndent","listIndent","parentType","s","indent","indent_found","isEmpty","skipEmptyLines","from","skipSpaces","skipSpacesBack","min","skipChars","skipCharsBack","getLines","begin","keepLastLF","queue","lineIndent","lineStart","first","MAX_AUTOCOMPLETED_CELLS","getLine","escapedSplit","isEscaped","table","startLine","endLine","silent","nextLine","firstCh","secondCh","lineText","columns","aligns","shift","pop","columnCount","oldParentType","terminatorRules","token_to","tableLines","token_tho","token_htro","token_ho","token_il","tbodyLines","autocompletedCells","terminate","token_tbo","token_tro","token_tdo","mem","params","haveEndMarker","blockquote","oldLineMax","oldBMarks","oldBSCount","oldSCount","oldTShift","lastLineEmpty","isOutdented","spaceAfterMarker","adjustTab","initial","oldIndent","lines","tokenize","hr","cnt","skipBulletListMarker","skipOrderedListMarker","markTightParagraphs","isOrdered","markerValue","posAfterMarker","isTerminatingParagraph","Number","markerCharCode","listTokIdx","listLines","prevEmptyEnd","contentStart","indentAfterMarker","itemLines","oldTight","oldListIndent","reference","_endLine","getNextLine","isContinuation","lineContent","destRes","helpers","destEndPos","destEndLineNo","title","titleRes","label","references","attr_name","unquoted","single_quoted","double_quoted","attr_value","attribute","open_tag","close_tag","comment","processing","declaration","cdata","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","HTML_SEQUENCES","block_names","html","heading","tmp","token_i","lheading","paragraph","r_table","r_code","r_fence","r_blockquote","r_hr","r_list","r_reference","r_html_block","r_heading","r_lheading","r_paragraph","ParserBlock","maxNesting","hasEmptyLines","prevLine","outTokens","StateInline","tokens_meta","pending","pendingLevel","delimiters","_prev_delimiters","backticks","backticksScanned","linkLevel","pushPending","token_meta","scanDelims","canSplitWord","count","left_flanking","right_flanking","can_open","can_close","isTerminatorChar","SCHEME_RE","matchAtStart","newline","pmax","ws","ESCAPED","escape","ch1","escapedStr","ch2","origStr","backtick","openerLength","matchStart","matchEnd","closerLength","strikethrough_tokenize","scanned","close","postProcess","loneMarkers","startDelim","endDelim","strikethrough_postProcess","emphasis_tokenize","isStrong","emphasis_post_process","ref","parseReference","labelStart","EMAIL_RE","AUTOLINK_RE","autolink","isLetter","lc","DIGITAL_RE","NAMED_RE","processDelimiters","openersBottom","headerIdx","lastTokenIdx","jumps","closerIdx","closer","minOpenerIdx","openerIdx","newMinOpenerIdx","opener","isOddMatch","lastJump","link_pairs","fragments_join","r_text","r_newline","r_escape","r_backticks","r_strikethrough","r_emphasis","r_link","r_image","r_autolink","r_html_inline","r_entity","_rules2","r_balance_pairs","r_fragments_join","ParserInline","ruler2","opts","re","src_Any","Any","src_Cc","Cc","src_Z","Z","src_P","P","src_ZPCc","src_ZCc","text_separators","src_pseudo_letter","src_ip4","src_auth","src_port","src_host_terminator","src_path","src_email_name","src_xn","src_domain_root","src_domain","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","src_host_strict","tpl_host_fuzzy_strict","src_host_port_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","tpl_host_fuzzy_test","tpl_email_fuzzy","tpl_link_fuzzy","tpl_link_no_ip_fuzzy","isObject","isRegExp","isFunction","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","isOptionsObj","reduce","acc","defaultSchemas","validate","tail","no_http","mailto","tlds_2ch_src_re","tlds_default","resetScanCache","__index__","__text_cache__","createValidator","createNormalizer","compile","reFactory","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","email_fuzzy","link_fuzzy","link_no_ip_fuzzy","host_fuzzy_test","aliases","schemaError","val","__compiled__","__schemas__","compiled","alias","slist","filter","schema_test","schema_search","schema_at_start","Match","__last_index__","__schema__","raw","createMatch","LinkifyIt","schemas","add","definition","set","m","ml","me","next","tld_pos","at_pos","testSchemaAt","keepOld","sort","el","reverse","maxInt","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","baseMinusTMin","floor","stringFromCharCode","error","RangeError","array","callback","mapDomain","domain","parts","labels","encoded","ucs2decode","counter","extra","ucs2encode","codePoints","basicToDigit","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","input","inputLength","bias","basic","oldi","w","baseMinusT","out","currentValue","basicLength","handledCPCount","handledCPCountPlusOne","q","qMinusT","toUnicode","toASCII","punycode","components","core","rules2","default","cfg_default","zero","cfg_zero","commonmark","cfg_commonmark","BAD_PROTO_RE","GOOD_DATA_RE","RECODE_HOSTNAME_FOR","parsed","er","MarkdownIt","presetName","utils","ParserCore","renderer","configure","presets","missed","use","plugin","args","apply","parseInline","computed","markdownIt","props","__exports__","commands","description","wait","editable","handleExec","api","commandLines","initData","console","log"],"sourceRoot":""}